<!-- Authors: Chris Taylor, Ceki Gulcu. -->

<!-- Version: 1.2 -->

<!--============================================================================
    A configuration element consists of optional renderer
    elements,appender elements, categories and an optional root
    element.
============================================================================

	#Table: ! Appenders ! appender ! Name ! @name ! Class ! @class ! Parameters ! param/@name ! Values ! param/@value
	#Table: ! Loggers ! category|logger ! Name ! @name ! Additivity ! @additivity ! Level ! level/@value ! Appenders ! appender-ref/@ref
-->
<!ELEMENT log4j:configuration (renderer*, appender*,(category|logger)*,root?,
                               categoryFactory?)>



<!ATTLIST log4j:configuration
  xmlns:log4j              CDATA #FIXED "http://jakarta.apache.org/log4j/"
>

<!-- The "threshold" attribute takes a level value such that all -->
<!-- logging statements with a level equal or below this value are -->
<!-- disabled. -->

<!ATTLIST log4j:configuration
  threshold                (all|debug|info|warn|error|fatal|off|null) "null"
>

<!-- By default, debug attribute is "null", meaning that we not touch   -->
<!-- internal log4j logging settings.                                   -->
<!-- Setting the "debug" attributes enable the printing                 -->
<!-- of internal log4j logging statements.                              -->

<!ATTLIST log4j:configuration
  debug                    (true|false|null)  "null"
>

<!--============================================================================
    renderer elements allow the user to customize the conversion of
    message objects to String.
============================================================================
	#SelectOnInsert
    #Template:

        <xsl:template match="renderer">
            <table cellpadding="0" cellspacing="0">
                <tr valign="top">
                    <td>Rendered class:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@renderedClass"/></b></td>
                </tr>
                <tr valign="top">
                    <td>Rendering class:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@renderingClass"/></b></td>
                </tr>
            </table>
        </xsl:template>
-->
<!ELEMENT renderer EMPTY>
<!ATTLIST renderer
  renderedClass  CDATA #REQUIRED
  renderingClass CDATA #REQUIRED
>

<!--============================================================================
    Appenders must have a name and a class.
    Appenders may contain an error handler, a layout, optional parameters
    and filters. They may also reference (or include) other appenders.
============================================================================
	#SelectOnInsert
    #Label: @name
    #Icon: Appender.gif
    #ErrorIcon: AppenderError.png
    #Template:

        <xsl:template match="appender">
            <table cellpadding="0" cellspacing="0">
                <tr valign="top">
                    <td>Appender:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@name"/></b></td>
                </tr>
                <tr valign="top">
                    <td>Appender class:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@class"/></b></td>
                </tr>
                <xsl:for-each select="param">
                <tr valign="top">
                    <td><xsl:value-of select="@name"/></td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@value"/></b></td>
                </tr>
                </xsl:for-each>
            </table>
        </xsl:template>
-->
<!ELEMENT appender (errorHandler?, param*, layout?, filter*, appender-ref*)>
<!--
    #Unique: ../appender/@name
    #NotNull
-->
<!ATTLIST appender
  name 		ID 	#REQUIRED
>
<!ATTLIST appender
  class         CDATA   #REQUIRED
>

<!--============================================================================
    See the layout class documentation to understand its parameters.
============================================================================
	#SelectOnInsert
    #Label: @class
    #Template:

        <xsl:template match="layout">
            <table cellpadding="0" cellspacing="0">
                <tr valign="top">
                    <td>Layout class:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@class"/></b></td>
                </tr>
                <xsl:for-each select="param">
                <tr valign="top">
                    <td><xsl:value-of select="@name"/></td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@value"/></b></td>
                </tr>
                </xsl:for-each>
            </table>
        </xsl:template>
-->
<!ELEMENT layout (param*)>
<!ATTLIST layout
  class		CDATA	#REQUIRED
>

<!--============================================================================
    See the filter class documentation to understand its parameters.
============================================================================
	#SelectOnInsert
    #Template:

        <xsl:template match="filter">
            <table cellpadding="0" cellspacing="0">
                <tr valign="top">
                    <td>Filter class:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@class"/></b></td>
                </tr>
                <xsl:for-each select="param">
                <tr valign="top">
                    <td><xsl:value-of select="@name"/></td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@value"/></b></td>
                </tr>
                </xsl:for-each>
            </table>
        </xsl:template>
-->
<!ELEMENT filter (param*)>
<!ATTLIST filter
  class		CDATA	#REQUIRED
>

<!--============================================================================
    ErrorHandlers can be of any class. They can admit any number of
    parameters.
============================================================================
	#SelectOnInsert
    #Template:

        <xsl:template match="errorHandler">
            <table cellpadding="0" cellspacing="0">
                <tr valign="top">
                    <td>Error handler class:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@class"/></b></td>
                </tr>
                <xsl:for-each select="param">
                <tr valign="top">
                    <td><xsl:value-of select="@name"/></td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@value"/></b></td>
                </tr>
                </xsl:for-each>
            </table>
        </xsl:template>
-->
<!ELEMENT errorHandler (param*, root-ref?, logger-ref*,  appender-ref?)>
<!ATTLIST errorHandler
   class        CDATA   #REQUIRED
>

<!--============================================================================
============================================================================
-->
<!ELEMENT root-ref EMPTY>

<!--============================================================================
============================================================================
    #SelectOnInsert
    #Label: @ref
    #Template:

        <xsl:template match="logger-ref">
            <table cellpadding="0" cellspacing="0">
                <tr valign="top">
                    <td>Referenced logger:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@ref"/></b></td>
                </tr>
            </table>
        </xsl:template>
-->
<!ELEMENT logger-ref EMPTY>
<!--
    #Unique: ../logger-ref/@ref
    #NotNull
-->
<!ATTLIST logger-ref
  ref IDREF #REQUIRED
>

<!--============================================================================
============================================================================
	#SelectOnInsert
     #Label: @name
    #Template:

        <xsl:template match="param">
            <table cellpadding="0" cellspacing="0">
                <tr valign="top">
                    <td>Name:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@name"/></b></td>
                </tr>
                <tr valign="top">
                    <td>Value</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@value"/></b></td>
                </tr>
            </table>
        </xsl:template>
-->
<!ELEMENT param EMPTY>
<!--
    _#_Unique: ../param/@name
    #NotNull
-->
<!ATTLIST param
  name		CDATA   #REQUIRED
>
<!ATTLIST param
  value         CDATA   #REQUIRED
>


<!--============================================================================
    The priority class is org.apache.log4j.Level by default.
============================================================================
	#SelectOnInsert
     #Label: @value
    #Template:

        <xsl:template match="priority">
            <table cellpadding="0" cellspacing="0">
                <xsl:if test="@class">
                <tr valign="top">
                    <td>Priority class:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@class"/></b></td>
                </tr>
                </xsl:if>
                <tr valign="top">
                    <td>Priority value:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@value"/></b></td>
                </tr>
                <xsl:for-each select="param">
                <tr valign="top">
                    <td><xsl:value-of select="@name"/></td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@value"/></b></td>
                </tr>
                </xsl:for-each>
            </table>
        </xsl:template>
-->
<!ELEMENT priority (param*)>
<!ATTLIST priority
  class   CDATA	#IMPLIED
  value	  CDATA #REQUIRED
>

<!--============================================================================
    The level class is org.apache.log4j.Level by default.
============================================================================
	#SelectOnInsert
     #Label: @value
    #Template:

        <xsl:template match="level">
            <table cellpadding="0" cellspacing="0">
                <xsl:if test="@class">
                <tr valign="top">
                    <td>Level class:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@class"/></b></td>
                </tr>
                </xsl:if>
                <tr valign="top">
                    <td>Level value:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@value"/></b></td>
                </tr>
                <xsl:for-each select="param">
                <tr valign="top">
                    <td><xsl:value-of select="@name"/></td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@value"/></b></td>
                </tr>
                </xsl:for-each>
            </table>
        </xsl:template>
-->
<!ELEMENT level (param*)>
<!ATTLIST level
  class   CDATA	#IMPLIED
  value	  CDATA #REQUIRED
>


<!--============================================================================
    If no level element is specified, then the configurator MUST not
    touch the level of the named category.
============================================================================
	#SelectOnInsert
     #Label: @name
     #Icon: Logger.gif
     #ErrorIcon: LoggerError.png
    #Template:

        <xsl:template match="category">
            <table cellpadding="0" cellspacing="0">
                <tr valign="top">
                    <td>Category name:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@name"/></b></td>
                </tr>
                <xsl:if test="@class">
                <tr valign="top">
                    <td>Category class:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@class"/></b></td>
                </tr>
                </xsl:if>
                <tr valign="top">
                    <td>Additivity:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@additivity"/></b></td>
                </tr>
                <xsl:for-each select="param">
                <tr valign="top">
                    <td><xsl:value-of select="@name"/></td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@value"/></b></td>
                </tr>
                </xsl:for-each>
                <xsl:for-each select="appender-ref">
                <tr valign="top">
                    <td>Appender:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@ref"/></b></td>
                </tr>
                </xsl:for-each>
            </table>
        </xsl:template>
-->
<!ELEMENT category (param*,(priority|level)?,appender-ref*)>
<!--
    #Unique: ../category/@name
    #NotNull
-->
<!ATTLIST category
  name          CDATA	#REQUIRED
>
<!ATTLIST category
  class         CDATA   #IMPLIED
>
<!ATTLIST category
  additivity    (true|false) "true"
>

<!--============================================================================
    If no level element is specified, then the configurator MUST not
    touch the level of the named category.
============================================================================
	#SelectOnInsert
     #Label: @name
     #Icon: Logger.gif
     #ErrorIcon: LoggerError.png
    #Template:

        <xsl:template match="logger">
            <table cellpadding="0" cellspacing="0">
                <tr valign="top">
                    <td>Category name:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@name"/></b></td>
                </tr>
                <tr valign="top">
                    <td>Additivity:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@additivity"/></b></td>
                </tr>
                <xsl:for-each select="appender-ref">
                <tr valign="top">
                    <td>Appender:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@ref"/></b></td>
                </tr>
                </xsl:for-each>
            </table>
        </xsl:template>
-->
<!ELEMENT logger (level?,appender-ref*)>
<!--
    #Unique: ../logger/@name
    #NotNull
-->
<!ATTLIST logger
  name		ID	#REQUIRED
>
<!ATTLIST logger
  additivity    (true|false) "true"
>

<!--============================================================================
============================================================================
 	#SelectOnInsert
    #Template:

        <xsl:template match="categoryFactory">
            <table cellpadding="0" cellspacing="0">
                <tr valign="top">
                    <td>Category factory class:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@class"/></b></td>
                </tr>
                <xsl:for-each select="param">
                <tr valign="top">
                    <td><xsl:value-of select="@name"/></td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@value"/></b></td>
                </tr>
                </xsl:for-each>
            </table>
        </xsl:template>
-->
<!ELEMENT categoryFactory (param*)>
<!ATTLIST categoryFactory
   class        CDATA #REQUIRED>


<!--============================================================================
============================================================================
	#SelectOnInsert
     #Label: @ref
    #Template:

        <xsl:template match="appender-ref">
            <table cellpadding="0" cellspacing="0">
                <tr valign="top">
                    <td>Referenced appender:</td>
                    <td width="20"></td>
                    <td><b><xsl:value-of select="@ref"/></b></td>
                </tr>
            </table>
        </xsl:template>
-->
<!ELEMENT appender-ref EMPTY>
<!--
  #References: //appender/@name
-->
<!ATTLIST appender-ref
  ref IDREF #REQUIRED
>

<!--============================================================================
    If no priority element is specified, then the configurator MUST not
    touch the priority of root.
    The root category always exists and cannot be subclassed.
============================================================================
	#SelectOnInsert
    #Template:

        <xsl:template match="root">
          <xsl:if test="param|appender-ref">
            <table cellpadding="0" cellspacing="0">
                <xsl:for-each select="param">
                <tr valign="top">
                    <td><xsl:value-of select="@name"/><xsl:text> </xsl:text></td>
                    <td width="20"><xsl:text> </xsl:text></td>
                    <td><b><xsl:value-of select="@value"/></b></td>
                </tr>
                </xsl:for-each>
                <xsl:for-each select="appender-ref">
                <tr valign="top">
                    <td>Appender:</td>
                    <td width="20"><xsl:text> </xsl:text></td>
                    <td><b><xsl:value-of select="@ref"/></b></td>
                </tr>
                </xsl:for-each>
            </table>
          </xsl:if>
        </xsl:template>
-->
<!ELEMENT root (param*, (priority|level)?, appender-ref*)>


<!-- ==================================================================== -->
<!--                       A logging event                                -->
<!-- ==================================================================== -->
<!ELEMENT log4j:eventSet (log4j:event*)>
<!ATTLIST log4j:eventSet
  xmlns:log4j             CDATA #FIXED "http://jakarta.apache.org/log4j/"
  version                (1.1|1.2) "1.2"
  includesLocationInfo   (true|false) "true"
>



<!ELEMENT log4j:event (log4j:message, log4j:NDC?, log4j:throwable?,
                       log4j:locationInfo?) >

<!-- The timestamp format is application dependent. -->
<!ATTLIST log4j:event
    logger     CDATA #REQUIRED
    level      CDATA #REQUIRED
    thread     CDATA #REQUIRED
    timestamp  CDATA #REQUIRED
>

<!ELEMENT log4j:message (#PCDATA)>
<!ELEMENT log4j:NDC (#PCDATA)>

<!ELEMENT log4j:throwable (#PCDATA)>

<!ELEMENT log4j:locationInfo EMPTY>
<!ATTLIST log4j:locationInfo
  class  CDATA	#REQUIRED
  method CDATA	#REQUIRED
  file   CDATA	#REQUIRED
  line   CDATA	#REQUIRED
>
