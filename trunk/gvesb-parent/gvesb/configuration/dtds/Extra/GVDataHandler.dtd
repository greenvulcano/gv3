
<!ENTITY % dbo_types        "DBOSelect|DBOThreadSelect|DBOUpdate|DBOInsert|DBOInsertOrUpdate|DBOUpdateOrInsert|DBOCallSP|DBOFlatSelect|DBOMultiFlatSelect">
<!ENTITY % statement_type   "select|insert|update|callsp">

<!--
    Transformer Helper useful to invoke DataHandler Retriever in stand-alone XSL Transformations.

    #Label: @dh-call-name
-->
<!ELEMENT DHExternalRetrieverHelper (Description?)>
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DHExternalRetrieverHelper type CDATA #FIXED "transformer-helper">
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DHExternalRetrieverHelper class CDATA #FIXED "it.greenvulcano.gvesb.datahandling.utils.dte.DHExternalRetrieverHelper">
<!--
    DataHandler call providing the retrievers.

    #References: /GVCore/GVSystems/Systems/System/Channel/dh-call/@name
-->
<!ATTLIST DHExternalRetrieverHelper dh-call-name CDATA #REQUIRED>
<!--
    DataBase connection name.
    Is overridden by the DBO_JDBC_CONNECTION_NAME property value, if set.

    #NotNull
-->
<!ATTLIST DHExternalRetrieverHelper jdbc-connection-name CDATA #REQUIRED>

<!--
    Defines the parameters to make a call to DataHanlder.

    #Label: @name
    #Icon: GVDHCall.png
    #Category: DataBase
    #SortChild
    #Template:

        <xsl:template match="dh-call">
            <xsl:if test="Description">
                <small><br/><xsl:value-of select="Description"/></small>
            </xsl:if>
        </xsl:template>
-->
<!ELEMENT dh-call (Description?, RetrieverConfig?, (DBOBuilder|DBOMongoBuilder)+ )>
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST dh-call    type CDATA #FIXED "call">
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST dh-call    class CDATA #FIXED "it.greenvulcano.gvesb.virtual.datahandler.DataHandlerCallOperation">
<!--
    Operation name.
    Used in the 'Flow' section to associate workflow nodes to VCL operations.

    #NotNull
    #Unique: ../*[@type='enqueue' or @type='dequeue' or @type='call']/@name
-->
<!ATTLIST dh-call     name CDATA #REQUIRED>

<!--
    Allows you to define helper for use in DataHandler data transformations.

    #SelectOnInsert
-->
<!ELEMENT RetrieverConfig (Description?, GenericRetriever?, TableRetriever?, JavaScriptRetriever?)>

<!--
    Internal service useful to set DBOBuilder name to call at dh-call operations.
    Useful only as InputService of GVOperationNode that references a dh-call operation.

    #Template:
        <xsl:template match="dh-selector-service">
            <xsl:if test="Description">
                <small><xsl:value-of select="Description"/></small>
            </xsl:if>
        </xsl:template>
-->
<!ELEMENT dh-selector-service (Description?, dh-selector-call)>
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST dh-selector-service type CDATA #FIXED "service">
<!--
    Unmodifiable.
-->
<!ATTLIST dh-selector-service   internal CDATA #FIXED "yes">
<!--
    Define if the service is critical.
    A critical service failure mark the entire communication as failed.
-->
<!ATTLIST dh-selector-service critical (yes | no) "yes">

<!--
    VCL Operation useful to set DBOBuilder name to call contained in a dh-call operation.

    #Label: @name
    #Template:

        <xsl:template match="dh-selector-call">
            <xsl:if test="Description">
                <small><xsl:value-of select="Description"/></small>
            </xsl:if>
        </xsl:template>
-->
<!ELEMENT dh-selector-call (Description?)>
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST dh-selector-call type CDATA #FIXED "call">
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST dh-selector-call  class CDATA #FIXED "it.greenvulcano.gvesb.virtual.datahandler.DBOBuilderSelectorCallOperation">
<!--
    Operation identifier.

    #NotNull
    #Unique: ../*[@type='enqueue' or @type='dequeue' or @type='call']/@name
-->
<!ATTLIST dh-selector-call  name CDATA #FIXED "setDBService">
<!--
    DBOBuilder name.

    #NotNull
    #References: /GVCore/GVSystems/Systems/System[@id-system=current()/ancestor::GVOperationNode/@id-system]/Channel[@id-channel=current()/ancestor::Operation/Participant[@id-system=current()/ancestor::GVOperationNode/@id-system]/@id-channel]/*[@name=current()/ancestor::GVOperationNode/@operation-name]/*[@type='dbobuilder']/@name
-->
<!ATTLIST dh-selector-call DH_SERVICE_NAME CDATA #REQUIRED>

<!--
    Allows you to define helper running SQL select and
    return the first field of the first selected record
    as string.

    #SelectOnInsert
    #SortChild
-->
<!ELEMENT GenericRetriever (Description?, DataRetriever*)>
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST GenericRetriever type CDATA #FIXED "retriever">
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST GenericRetriever class CDATA #FIXED "it.greenvulcano.gvesb.datahandling.utils.GenericRetriever">

<!--
    Allows you to define helper running SQL select and
    return the result as an XML string in following form:
       <RowSet>
          <data>
             <row>
                <col>value1</col>
                <col>value2</col>
                <col>value3</col>
             </row>
             <row>
                <col>value4</col>
                <col>value5</col>
                <col>value6</col>
             </row>
             ..
             <row>
                <col>valuex</col>
                <col>valuey</col>
                <col>valuez</col>
             </row>
          </data>
       </RowSet>

    #SelectOnInsert
-->
<!ELEMENT TableRetriever (Description?, DataRetriever*)>
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST TableRetriever type CDATA #FIXED "retriever">
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST TableRetriever class CDATA #FIXED "it.greenvulcano.gvesb.datahandling.utils.TableRetriever">

<!--
    Allows you to define helper running JavaScript code
    and return a string.

    #SelectOnInsert
    #SortChild
-->
<!ELEMENT JavaScriptRetriever (Description?, DataRetriever*)>
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST JavaScriptRetriever type CDATA #FIXED "retriever">
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST JavaScriptRetriever class CDATA #FIXED "it.greenvulcano.gvesb.datahandling.utils.JavaScriptRetriever">

<!--
    Defines a helper function.

    Can contains the following placeholders:
     - fixed : a text string;
     - ${{propname}}      : a System property name;
     - sp{{propname}}     : a System property name;
     - env{{varname}}     : an Environment variable value;
     - @{{propname}}      : a inProperties property name;
     - timestamp{{pattern[::tZone]]}} : return the current timestamp, in optional tZone value,
                                        formatted as 'pattern'
     - dateformat{{date::source-pattern::dest-pattern[::source-tZone::dest-tZone]}} :
                               reformat 'date' from 'source-pattern' to 'dest-pattern',
                               and optionally from 'source-tZone' to 'dest-tZone'
     - decode{{field[::cond1::val1][::cond2::val2][cond...n::val...n]::default}} :
                               evaluate as if-then-else; if 'field' is equal to cond1...n,
                               return the value of val1...n, otherwise 'default'
     - decodeL{{sep::field[::cond1::val1][::cond2::val2][cond...n::val...n]::default}} :
                               is equivalent to 'decode', with the difference that 'condX'
                               can be a list of values separated by 'sep'
     - script{{lang::[scope::]script}} : evaluate a 'lang' script, using the base context 'scope'
     - js{{[scope::]script}} : evaluate a JavaScript script, using the context 'scope'
     - ognl{{script}}        : evaluate a OGNL script
     - sql{{conn::statement}}            : execute a select sql statement sql and return the value of
                                           the first field of the first selected record.
                                           The 'conn' parameter is the JNDI name of a DataSource
     - sqllist{{conn[::sep]::statement}} : execute a select sql statement sql and return the value of
                                           the first field of all selected records as a 'sep' separated list.
                                           The 'conn' parameter is the JNDI name of a DataSource
                                           The 'sep' parameter defaults to comma
     - sqltable{{conn::statement}}       : executes a select sql statement and returns all values of
                                           returned cursor as an XML.
                                           The 'conn' parameter is the JNDI name of a DataSource

    #Label: @method
    #SelectOnInsert
-->
<!ELEMENT DataRetriever (#PCDATA)>
<!--
    Helper function name.

    #Unique: ../DataRetriever/@method
    #NotNull
-->
<!ATTLIST DataRetriever method CDATA #REQUIRED>
<!--
    Comma-separated list of parameters name to be substituted in the function.

    #NotNull
-->
<!ATTLIST DataRetriever signature CDATA #IMPLIED>
<!--
    If true the calculated function value, for the given parameters set, is cached
    for future access during the service processing.
    The cache is canceled at service end.
    Default false.
-->
<!ATTLIST DataRetriever cacheable (true|false) #IMPLIED>

<!--
    Alias for a DataHandler service.

    #Label: @alias
    #SelectOnInsert
-->
<!ELEMENT DHAlias (Description?)>
<!--
    Nome univoco dell'alias.

    #Unique: ../../../DBOBuilder/DHAliasList/DHAlias/@alias
    #NotNull
-->
<!ATTLIST DHAlias alias CDATA #REQUIRED>

<!--
    List of aliases for a given DataHandler service.

    #Table: | AliasList | Alias | Alias | @alias | Description | Description
    #SelectOnInsert
    #SortChild
    #Template:

        <xsl:template match="DHAliasList">
            <xsl:if test="Description">
                <small><xsl:value-of select="Description"/></small><p/>
            </xsl:if>
        </xsl:template>
-->
<!ELEMENT DHAliasList (Description?, DHAlias+)>


<!--
    DataHandler service.

    #Label: @name
    #SelectOnInsert
    #Icon: GVDataHandler_DBOBuilder.png
-->
<!ELEMENT DBOBuilder (Description?, DHAliasList?, DHVariables?, (%dbo_types;)+, XMLMerge?)>
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOBuilder type CDATA #FIXED "dbobuilder">
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOBuilder class CDATA #FIXED "it.greenvulcano.gvesb.datahandling.dbobuilder.DBOBuilder">
<!--
    Service name.

    #Unique: ../*[@type='dbobuilder']/@name
    #NotNull
-->
<!ATTLIST DBOBuilder name CDATA #REQUIRED>
<!--
    DataBase connection name.
    Is overridden by the DBO_JDBC_CONNECTION_NAME property value, if set.

    #NotNull
-->
<!ATTLIST DBOBuilder jdbc-connection-name CDATA #REQUIRED>
<!--
    Defines if the services must be executed in transaction.
    Default true.
-->
<!ATTLIST DBOBuilder transacted (false|true) #IMPLIED>
<!--
    If the service is transacted, this attributes indicates if partecipate in
    a distributed transaction or not.
    If 'false' the DataHandler handle a local transaction.
    Default false.
-->
<!ATTLIST DBOBuilder isXA (true|false) #IMPLIED>
<!--
    The default is the value of @output-data of the last DBOxxx.

    #NotNull
-->
<!ATTLIST DBOBuilder output-data CDATA #IMPLIED>
<!--
    If set to 'none' not perform the input/output data dump.
    If set to 'text' or 'hex' then the dump is performed as text or hexadecimal string.
    Defaut to 'text'.
-->
<!ATTLIST DBOBuilder make-dump (none|text|hex) #IMPLIED>

<!--
    DBO optimized for insert operations.

    #Label: @name
    #SelectOnInsert
    #Icon: GVDBOInsert.png
-->
<!ELEMENT DBOInsert (Description?, DHVariables?, statement+)>
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOInsert type CDATA #FIXED "dbo">
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOInsert class CDATA #FIXED "it.greenvulcano.gvesb.datahandling.dbo.DBOInsert">
<!--
    DBOInsert name.

    #Unique: ../*[@type='dbo']/@name
    #NotNull
-->
<!ATTLIST DBOInsert name CDATA #REQUIRED>
<!--
    Transformation to be applied on the input data to obtain the internal XML commands.

    #References: {{parent::DBOBuilder/parent::dh-call/DBOBuilder/DBOInsert}} /GVCore/GVDataTransformation/Transformations/*[@type='transformation']/@name
    #References: {{parent::DBOBuilder/parent::dh-call/DBOBuilder/DBOInsert}} /GVCore/GVDataTransformation/Transformations/*[@type='transformation']/TransformationAlias/@name
    #References: {{parent::DBOBuilder/parent::GVDataHandlerConfiguration/DBOBuilder/DBOInsert}} gvesb:document('GVCore')/GVCore/GVDataTransformation/Transformations/*[@type='transformation']/@name
    #References: {{parent::DBOBuilder/parent::GVDataHandlerConfiguration/DBOBuilder/DBOInsert}} gvesb:document('GVCore')/GVCore/GVDataTransformation/Transformations/*[@type='transformation']/TransformationAlias/@name
-->
<!ATTLIST DBOInsert transformation CDATA #IMPLIED>
<!--
    Force mode of the DBO, can be used in DBOBuilder whit more heterogeneous DBO.
    Mode:
    caller - inherit the mode of the caller
    xml2db - data entry mode
-->
<!ATTLIST DBOInsert force-mode (caller|xml2db) #IMPLIED>
<!--
    DataBase connection name.
    Override connection defined in DBOBuilder.

    #NotNull
-->
<!ATTLIST DBOInsert jdbc-connection-name CDATA #IMPLIED>
<!--
    Tell the engine do not use the input data.

-->
<!ATTLIST DBOInsert ignore-input (true|false) #IMPLIED>
<!--
    The default is the value of @name-Input.
    Can be set as the @output-data of a preceeding DBO to use its
    output as input.

    #NotNull
-->
<!ATTLIST DBOInsert input-data CDATA #IMPLIED>
<!--
    The default is the value of @name-Output.

    #NotNull
-->
<!ATTLIST DBOInsert output-data CDATA #IMPLIED>
<!--
    Tell the engine to handle auto generated keys at runtime (ex. autoincrement primary key fields).
    Default to false.

-->
<!ATTLIST DBOInsert autogenerate-keys (true|false) #IMPLIED>

<!--
    DBO running the insert, and in case of collision, the corresponding update.

    #Label: @name
    #SelectOnInsert
    #Icon: GVDBOInsertUpdate.png
-->
<!ELEMENT DBOInsertOrUpdate (Description?, DHVariables?, statement+)>
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOInsertOrUpdate type CDATA #FIXED "dbo">
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOInsertOrUpdate class CDATA #FIXED "it.greenvulcano.gvesb.datahandling.dbo.DBOInsertOrUpdate">
<!--
    DBOInsertOrUpdate name.

    #Unique: ../*[@type='dbo']/@name
    #NotNull
-->
<!ATTLIST DBOInsertOrUpdate name CDATA #REQUIRED>
<!--
    Transformation to be applied on the input data to obtain the internal XML commands.

    #References: {{parent::DBOBuilder/parent::dh-call/DBOBuilder/DBOInsertOrUpdate}} /GVCore/GVDataTransformation/Transformations/*[@type='transformation']/@name
    #References: {{parent::DBOBuilder/parent::dh-call/DBOBuilder/DBOInsertOrUpdate}} /GVCore/GVDataTransformation/Transformations/*[@type='transformation']/TransformationAlias/@name
    #References: {{parent::DBOBuilder/parent::GVDataHandlerConfiguration/DBOBuilder/DBOInsertOrUpdate}} gvesb:document('GVCore')/GVCore/GVDataTransformation/Transformations/*[@type='transformation']/@name
    #References: {{parent::DBOBuilder/parent::GVDataHandlerConfiguration/DBOBuilder/DBOInsertOrUpdate}} gvesb:document('GVCore')/GVCore/GVDataTransformation/Transformations/*[@type='transformation']/TransformationAlias/@name
-->
<!ATTLIST DBOInsertOrUpdate transformation CDATA #IMPLIED>
<!--
    Specifies the error code when inserting with duplicate key.

    #NotNull
-->
<!ATTLIST DBOInsertOrUpdate duplicate-insert-code CDATA #IMPLIED>
<!--
    Force mode of the DBO, can be used in DBOBuilder whit more heterogeneous DBO.
    Mode:
    caller - inherit the mode of the caller
    xml2db - data entry mode
-->
<!ATTLIST DBOInsertOrUpdate force-mode (caller|xml2db) #IMPLIED>
<!--
    DataBase connection name.
    Override connection defined in DBOBuilder.

    #NotNull
-->
<!ATTLIST DBOInsertOrUpdate jdbc-connection-name CDATA #IMPLIED>
<!--
    Tell the engine do not use the input data.

-->
<!ATTLIST DBOInsertOrUpdate ignore-input (true|false) #IMPLIED>
<!--
    The default is the value of @name-Input.
    Can be set as the @output-data of a preceeding DBO to use its
    output as input.

    #NotNull
-->
<!ATTLIST DBOInsertOrUpdate input-data CDATA #IMPLIED>
<!--
    The default is the value of @name-Output.

    #NotNull
-->
<!ATTLIST DBOInsertOrUpdate output-data CDATA #IMPLIED>


<!--
    DBO running the update, and if no record updated, the corresponding insert.

    #Label: @name
    #SelectOnInsert
    #Icon: GVDBOUpdateInsert.png
-->
<!ELEMENT DBOUpdateOrInsert (Description?, DHVariables?, statement+)>
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOUpdateOrInsert type CDATA #FIXED "dbo">
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOUpdateOrInsert class CDATA #FIXED "it.greenvulcano.gvesb.datahandling.dbo.DBOUpdateOrInsert">
<!--
    DBOUpdateOrInsert name.

    #Unique: ../*[@type='dbo']/@name
    #NotNull
-->
<!ATTLIST DBOUpdateOrInsert name CDATA #REQUIRED>
<!--
    Transformation to be applied on the input data to obtain the internal XML commands.

    #References: {{parent::DBOBuilder/parent::dh-call/DBOBuilder/DBOUpdateOrInsert}} /GVCore/GVDataTransformation/Transformations/*[@type='transformation']/@name
    #References: {{parent::DBOBuilder/parent::dh-call/DBOBuilder/DBOUpdateOrInsert}} /GVCore/GVDataTransformation/Transformations/*[@type='transformation']/TransformationAlias/@name
    #References: {{parent::DBOBuilder/parent::GVDataHandlerConfiguration/DBOBuilder/DBOUpdateOrInsert}} gvesb:document('GVCore')/GVCore/GVDataTransformation/Transformations/*[@type='transformation']/@name
    #References: {{parent::DBOBuilder/parent::GVDataHandlerConfiguration/DBOBuilder/DBOUpdateOrInsert}} gvesb:document('GVCore')/GVCore/GVDataTransformation/Transformations/*[@type='transformation']/TransformationAlias/@name
-->
<!ATTLIST DBOUpdateOrInsert transformation CDATA #IMPLIED>
<!--
    Force mode of the DBO, can be used in DBOBuilder with more heterogeneous DBO.
    Mode:
    caller - inherit the mode of the caller
    xml2db - data entry mode
-->
<!ATTLIST DBOUpdateOrInsert force-mode (caller|xml2db) #IMPLIED>
<!--
    DataBase connection name.
    Override connection defined in DBOBuilder.

    #NotNull
-->
<!ATTLIST DBOUpdateOrInsert jdbc-connection-name CDATA #IMPLIED>
<!--
    Tell the engine do not use the input data.

-->
<!ATTLIST DBOUpdateOrInsert ignore-input (true|false) #IMPLIED>
<!--
    The default is the value of @name-Input.
    Can be set as the @output-data of a preceeding DBO to use its
    output as input.

    #NotNull
-->
<!ATTLIST DBOUpdateOrInsert input-data CDATA #IMPLIED>
<!--
    The default is the value of @name-Output.

    #NotNull
-->
<!ATTLIST DBOUpdateOrInsert output-data CDATA #IMPLIED>


<!--
    DBO optimized for update operations.

    #Label: @name
    #SelectOnInsert
    #Icon: GVDBOUpdate.png
-->
<!ELEMENT DBOUpdate (Description?, DHVariables?, statement+)>
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOUpdate type CDATA #FIXED "dbo">
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOUpdate class CDATA #FIXED "it.greenvulcano.gvesb.datahandling.dbo.DBOUpdate">
<!--
    DBOUpdate name.

    #Unique: ../*[@type='dbo']/@name
    #NotNull
-->
<!ATTLIST DBOUpdate name CDATA #REQUIRED>
<!--
    Transformation to be applied on the input data to obtain the internal XML commands.

    #References: {{parent::DBOBuilder/parent::dh-call/DBOBuilder/DBOUpdate}} /GVCore/GVDataTransformation/Transformations/*[@type='transformation']/@name
    #References: {{parent::DBOBuilder/parent::dh-call/DBOBuilder/DBOUpdate}} /GVCore/GVDataTransformation/Transformations/*[@type='transformation']/TransformationAlias/@name
    #References: {{parent::DBOBuilder/parent::GVDataHandlerConfiguration/DBOBuilder/DBOUpdate}} gvesb:document('GVCore')/GVCore/GVDataTransformation/Transformations/*[@type='transformation']/@name
    #References: {{parent::DBOBuilder/parent::GVDataHandlerConfiguration/DBOBuilder/DBOUpdate}} gvesb:document('GVCore')/GVCore/GVDataTransformation/Transformations/*[@type='transformation']/TransformationAlias/@name
-->
<!ATTLIST DBOUpdate transformation CDATA #IMPLIED>

<!--
    Force mode of the DBO, can be used in DBOBuilder whit more heterogeneous DBO.
    Mode:
    caller - inherit the mode of the caller
    xml2db - data entry mode
-->
<!ATTLIST DBOUpdate force-mode (caller|xml2db) #IMPLIED>
<!--
    DataBase connection name.
    Override connection defined in DBOBuilder.

    #NotNull
-->
<!ATTLIST DBOUpdate jdbc-connection-name CDATA #IMPLIED>
<!--
    Tell the engine do not use the input data.

-->
<!ATTLIST DBOUpdate ignore-input (true|false) #IMPLIED>
<!--
    The default is the value of @name-Input.
    Can be set as the @output-data of a preceeding DBO to use its
    output as input.

    #NotNull
-->
<!ATTLIST DBOUpdate input-data CDATA #IMPLIED>
<!--
    The default is the value of @name-Output.

    #NotNull
-->
<!ATTLIST DBOUpdate output-data CDATA #IMPLIED>
<!--
    Tell the engine to handle auto generated keys at runtime (ex. autoincrement primary key fields).
    Default to false.

-->
<!ATTLIST DBOUpdate autogenerate-keys (true|false) #IMPLIED>


<!--
    DBO optimized for select operations.

    #Label: @name
    #SelectOnInsert
    #Icon: GVDBOSelect.png
-->
<!ELEMENT DBOSelect (Description?, DHVariables?, FieldFormatters*, statement+)>
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOSelect type CDATA #FIXED "dbo">
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOSelect class CDATA #FIXED "it.greenvulcano.gvesb.datahandling.dbo.DBOSelect">
<!--
    DBOSelect name.

    #Unique: ../*[@type='dbo']/@name
    #NotNull
-->
<!ATTLIST DBOSelect name CDATA #REQUIRED>
<!--
    Transformation to be used for converting internal rowset representation in user desired XML document.

    #References: {{parent::DBOBuilder/parent::dh-call/DBOBuilder/DBOSelect}} /GVCore/GVDataTransformation/Transformations/*[@type='transformation']/@name
    #References: {{parent::DBOBuilder/parent::dh-call/DBOBuilder/DBOSelect}} /GVCore/GVDataTransformation/Transformations/*[@type='transformation']/TransformationAlias/@name
    #References: {{parent::DBOBuilder/parent::GVDataHandlerConfiguration/DBOBuilder/DBOSelect}} gvesb:document('GVCore')/GVCore/GVDataTransformation/Transformations/*[@type='transformation']/@name
    #References: {{parent::DBOBuilder/parent::GVDataHandlerConfiguration/DBOBuilder/DBOSelect}} gvesb:document('GVCore')/GVCore/GVDataTransformation/Transformations/*[@type='transformation']/TransformationAlias/@name
-->
<!ATTLIST DBOSelect transformation CDATA #IMPLIED>
<!--
    Force mode of the DBO, can be used in DBOBuilder whit more heterogeneous DBO.
    Mode:
    caller - inherit the mode of the caller
    db2xml - data extraction mode
-->
<!ATTLIST DBOSelect force-mode (caller|db2xml) #IMPLIED>
<!--
    Tell the engine do not use the input data.

-->
<!ATTLIST DBOSelect ignore-input (true|false) #IMPLIED>
<!--
    DataBase connection name.
    Override connection defined in DBOBuilder.

    #NotNull
-->
<!ATTLIST DBOSelect jdbc-connection-name CDATA #IMPLIED>
<!--
    The default is the value of @name-Output.

    #NotNull
-->
<!ATTLIST DBOSelect output-data CDATA #IMPLIED>
<!--
    Tell the engine the RowSet document creation policy.
    Default is standard.

-->
<!ATTLIST DBOSelect rowset-builder (standard|extended) #IMPLIED>

<!--
    DBO optimized for select operations.
    Every statement is execute in a separate thread, then the results are
    merged before making the transformation.

    #Label: @name
    #SelectOnInsert
    #Icon: GVDBOThreadSelect.png
-->
<!ELEMENT DBOThreadSelect (Description?, DHVariables?, FieldFormatters*, statement+)>
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOThreadSelect type CDATA #FIXED "dbo">
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOThreadSelect class CDATA #FIXED "it.greenvulcano.gvesb.datahandling.dbo.DBOThreadSelect">
<!--
    DBOThreadSelect name.
    #Unique: ../*[@type='dbo']/@name
    #NotNull
-->
<!ATTLIST DBOThreadSelect name CDATA #REQUIRED>
<!--
    Transformation to be used for converting internal rowset representation in user desired XML document.

    #References: {{parent::DBOBuilder/parent::dh-call/DBOBuilder/DBOThreadSelect}} /GVCore/GVDataTransformation/Transformations/*[@type='transformation']/@name
    #References: {{parent::DBOBuilder/parent::dh-call/DBOBuilder/DBOThreadSelect}} /GVCore/GVDataTransformation/Transformations/*[@type='transformation']/TransformationAlias/@name
    #References: {{parent::DBOBuilder/parent::GVDataHandlerConfiguration/DBOBuilder/DBOThreadSelect}} gvesb:document('GVCore')/GVCore/GVDataTransformation/Transformations/*[@type='transformation']/@name
    #References: {{parent::DBOBuilder/parent::GVDataHandlerConfiguration/DBOBuilder/DBOThreadSelect}} gvesb:document('GVCore')/GVCore/GVDataTransformation/Transformations/*[@type='transformation']/TransformationAlias/@name
-->
<!ATTLIST DBOThreadSelect transformation CDATA #IMPLIED>
<!--
    Force mode of the DBO, can be used in DBOBuilder whit more heterogeneous DBO.
    Mode:
    caller - inherit the mode of the caller
    db2xml - data extraction mode
-->
<!ATTLIST DBOThreadSelect force-mode (caller|db2xml) #IMPLIED>
<!--
    Tell the engine do not use the input data.

-->
<!ATTLIST DBOThreadSelect ignore-input (true|false) #IMPLIED>
<!--
    DataBase connection name.
    Override connection defined in DBOBuilder.

    #NotNull
-->
<!ATTLIST DBOThreadSelect jdbc-connection-name CDATA #IMPLIED>
<!--
    The default is the value of @name-Output.

    #NotNull
-->
<!ATTLIST DBOThreadSelect output-data CDATA #IMPLIED>

<!--
    DBO optimized for select operations and conversion in CSV rows.

    #Label: @name
    #SelectOnInsert
-->
<!ELEMENT DBOFlatSelect (Description?, DHVariables?, FieldFormatters, statement)>
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOFlatSelect type CDATA #FIXED "dbo">
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOFlatSelect class CDATA #FIXED "it.greenvulcano.gvesb.datahandling.dbo.DBOFlatSelect">
<!--
    DBOFlatSelect name.

    #Unique: ../*[@type='dbo']/@name
    #NotNull
-->
<!ATTLIST DBOFlatSelect name CDATA #REQUIRED>
<!--
    Force mode of the DBO, can be used in DBOBuilder whit more heterogeneous DBO.
    Mode:
    caller - inherit the mode of the caller
    db2xml - data extraction mode
-->
<!ATTLIST DBOFlatSelect force-mode (caller|db2xml) #IMPLIED>
<!--
    Tell the engine do not use the input data.

-->
<!ATTLIST DBOFlatSelect ignore-input (true|false) #IMPLIED>
<!--
    DataBase connection name.
    Override connection defined in DBOBuilder.

    #NotNull
-->
<!ATTLIST DBOFlatSelect jdbc-connection-name CDATA #IMPLIED>
<!--
    The default is the value of @name-Output.

    #NotNull
-->
<!ATTLIST DBOFlatSelect output-data CDATA #IMPLIED>
<!--
    If defined, must be a valid pathname on local file system.
    The output data are written into the indicated file. Can contains placeholders to be resolved at runtime.

    #NotNull
-->
<!ATTLIST DBOFlatSelect direct-file-path CDATA #IMPLIED>

<!--
    DBO optimized for select operations and conversion in CSV rows.

    #Label: @name
    #SelectOnInsert
-->
<!ELEMENT DBOMultiFlatSelect (Description?, DHVariables?, FieldFormatters+, statement+)>
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOMultiFlatSelect type CDATA #FIXED "dbo">
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOMultiFlatSelect class CDATA #FIXED "it.greenvulcano.gvesb.datahandling.dbo.DBOMultiFlatSelect">
<!--
    DBOMultiFlatSelect name.

    #Unique: ../*[@type='dbo']/@name
    #NotNull
-->
<!ATTLIST DBOMultiFlatSelect name CDATA #REQUIRED>
<!--
    Force mode of the DBO, can be used in DBOBuilder whit more heterogeneous DBO.
    Mode:
    caller - inherit the mode of the caller
    db2xml - data extraction mode
-->
<!ATTLIST DBOMultiFlatSelect force-mode (caller|db2xml) #IMPLIED>
<!--
    Tell the engine do not use the input data.

-->
<!ATTLIST DBOMultiFlatSelect ignore-input (true|false) #IMPLIED>
<!--
    DataBase connection name.
    Override connection defined in DBOBuilder.

    #NotNull
-->
<!ATTLIST DBOMultiFlatSelect jdbc-connection-name CDATA #IMPLIED>
<!--
    The default is the value of @name-Output.

    #NotNull
-->
<!ATTLIST DBOMultiFlatSelect output-data CDATA #IMPLIED>
<!--
    If defined, must be a valid pathname on local file system.
    The output data are written into the indicated file. Can contains placeholders to be resolved at runtime.

    #NotNull
-->
<!ATTLIST DBOMultiFlatSelect direct-file-path CDATA #IMPLIED>


<!--
    DBO optimized for operations on store procedures.

    #Label: @name
    #SelectOnInsert
    #Icon: GVDBOCallSP.png
-->
<!ELEMENT DBOCallSP (Description?, DHVariables?, CallDescriptor*)>
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOCallSP type CDATA #FIXED "dbo">
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST DBOCallSP class CDATA #FIXED "it.greenvulcano.gvesb.datahandling.dbo.DBOCallSP">
<!--
    DBOCallSP name.

    #Unique: ../*[@type='dbo']/@name
    #NotNull
-->
<!ATTLIST DBOCallSP name CDATA #REQUIRED>
<!--
    Transformation to be applied on the input data to obtain the internal XML commands.

    #References: {{parent::DBOBuilder/parent::dh-call/DBOBuilder/DBOCallSP}} /GVCore/GVDataTransformation/Transformations/*[@type='transformation']/@name
    #References: {{parent::DBOBuilder/parent::dh-call/DBOBuilder/DBOCallSP}} /GVCore/GVDataTransformation/Transformations/*[@type='transformation']/TransformationAlias/@name
    #References: {{parent::DBOBuilder/parent::GVDataHandlerConfiguration/DBOBuilder/DBOCallSP}} gvesb:document('GVCore')/GVCore/GVDataTransformation/Transformations/*[@type='transformation']/@name
    #References: {{parent::DBOBuilder/parent::GVDataHandlerConfiguration/DBOBuilder/DBOCallSP}} gvesb:document('GVCore')/GVCore/GVDataTransformation/Transformations/*[@type='transformation']/TransformationAlias/@name
-->
<!ATTLIST DBOCallSP transformation CDATA #IMPLIED>
<!--
    Force mode of the DBO, can be used in DBOBuilder whit more heterogeneous DBO.
    Mode:
    caller - inherit the mode of the caller
    call   - call procedure mode
-->
<!ATTLIST DBOCallSP force-mode (caller|call) #IMPLIED>
<!--
    This parameter specifies is the callable statements must be executed with API CallableStatement#executeQuery().
    Default is false.
-->
<!ATTLIST DBOCallSP execute-query (true|false) #IMPLIED>
<!--
    DataBase connection name.
    Override connection defined in DBOBuilder.

    #NotNull
-->
<!ATTLIST DBOCallSP jdbc-connection-name CDATA #IMPLIED>
<!--
    Tell the engine do not use the input data.

-->
<!ATTLIST DBOCallSP ignore-input (true|false) #IMPLIED>
<!--
    The default is the value of @name-Input.
    Can be set as the @output-data of a preceeding DBO to use its
    output as input.

    #NotNull
-->
<!ATTLIST DBOCallSP input-data CDATA #IMPLIED>
<!--
    The default is the value of @name-Output.

    #NotNull
-->
<!ATTLIST DBOCallSP output-data CDATA #IMPLIED>

<!--
    #SelectOnInsert
-->
<!ELEMENT FieldFormatters (Description?, FieldFormatter*)>
<!--
    Must match the @id of the statement on wich output apply the formatters.

    #References: ../statement[@type='select']/@id
    #Unique: ../FieldFormatters/@id
    #NotNull
-->
<!ATTLIST FieldFormatters id CDATA #REQUIRED>
<!--
    Used to force DB table field formatting.

    #CompositeLabel: || @field-id | / | @field-name
    #SelectOnInsert
-->
<!ELEMENT FieldFormatter (Description?)>
<!--
    Unmodifiable.
    Used by GreenVulcanoESB factory framework.
-->
<!ATTLIST FieldFormatter type CDATA #FIXED "field-formatter">
<!--
    Comma-separated list of 0-based positions of fields on wich apply the formatter.

    #NotNull
-->
<!ATTLIST FieldFormatter field-id CDATA #IMPLIED>
<!--
    Comma-separated list of names of fields on wich apply the formatter.

    #NotNull
-->
<!ATTLIST FieldFormatter field-name CDATA #IMPLIED>
<!--
    Default to "#,##0.###". See NumberFormat javadoc.

    #NotNull
-->
<!ATTLIST FieldFormatter number-format CDATA #IMPLIED>
<!--
    Default to ","

    #NotNull
-->
<!ATTLIST FieldFormatter decimal-separator CDATA #IMPLIED>
<!--
    Grouping separator. Default to "."

    #NotNull
-->
<!ATTLIST FieldFormatter grouping-separator CDATA #IMPLIED>
<!--
    Default to "yyyyMMdd HH:mm:ss". See SimpleDateFormat javadoc.

    #NotNull
-->
<!ATTLIST FieldFormatter date-format CDATA #IMPLIED>
<!--
    Field length. Default to "64"

    #NotNull
-->
<!ATTLIST FieldFormatter field-length CDATA #IMPLIED>
<!--
    Filler char. Default to " "

    #NotNull
-->
<!ATTLIST FieldFormatter filler-char CDATA #IMPLIED>
<!--
    Terminator char. Default to ""

    #NotNull
-->
<!ATTLIST FieldFormatter terminator-char CDATA #IMPLIED>
<!--
    FieldFormatter trim. Default to "none"

-->
<!ATTLIST FieldFormatter trim (none|both|right|left) #IMPLIED>
<!--
    FielFormatter padding. Default to "none"

-->
<!ATTLIST FieldFormatter padding (none|right|left) #IMPLIED>

<!--
    This element allows to call the store procedure.

    #SelectOnInsert
-->
<!ELEMENT CallDescriptor (Description?, statement, SPOutputParameters?)>
<!--
    CallDescriptor identifier.

    #NotNull
    #Pattern: ! [0-9]* ! set a integer value
    #Unique: ../CallDescriptor/@id
-->
<!ATTLIST CallDescriptor id CDATA #IMPLIED>
<!--
    If true, the output parameters will be referenced by name instead of position.
    Default is false.
-->
<!ATTLIST CallDescriptor named-parameter-mode (true|false) #IMPLIED>

<!--
    #SelectOnInsert
    #SortChild
-->
<!ELEMENT SPOutputParameters (SPOutputParameter+)>

<!--
    #CompositeLabel: || @position | / | @db-type | / | @java-type | / | @prop-name
    #SelectOnInsert
-->
<!ELEMENT SPOutputParameter EMPTY>
<!--
    Output parameter column type.

-->
<!ATTLIST SPOutputParameter db-type (string|number|int|long|float|date|binary|blob|oracle_cursor)  #REQUIRED>
<!--
    Output parameter java type.

-->
<!ATTLIST SPOutputParameter java-type (string|int|long|date|byte_array|resultset) #REQUIRED>
<!--
    Output parameter position.

    #NotNull
-->
<!ATTLIST SPOutputParameter position CDATA #REQUIRED>
<!--
    Property name.

    #NotNull
-->
<!ATTLIST SPOutputParameter prop-name CDATA #REQUIRED>
<!--
    Parameter name. This parameter is mandatory if the attribute CallDescriptor/@named-parameter-mode is true.

    #NotNull
-->
<!ATTLIST SPOutputParameter param-name CDATA #IMPLIED>
<!--
    If true, adds the parameter value, with the prop-name key, in the properties map to be used into the next DBOs.
    Default is false.
-->
<!ATTLIST SPOutputParameter return-in-prop (true|false) #IMPLIED>

<!--
    If true, adds the parameter value, with the prop-name key, in the uuid map to be used into the next DBOs.
    Default is false.
-->
<!ATTLIST SPOutputParameter return-in-uuid (true|false) #IMPLIED>

<!--
    List of default values for DataHandler service's variables.

    #SelectOnInsert
    #SortChild
-->
<!ELEMENT DHVariables (DHVariable*)>
<!--
    Default value for DataHandler service's variable.

    #Label: @name
    #SelectOnInsert
-->
<!ELEMENT DHVariable (Description?)>
<!--
    Variable name.

    #Unique: ../DHVariable/@name
    #NotNull
-->
<!ATTLIST DHVariable name CDATA #REQUIRED>
<!--
    Variable value.
    Can contains the following placeholders:
     - fixed : a text string;
     - ${{propname}}      : a System property name;
     - sp{{propname}}     : a System property name;
     - env{{varname}}     : an Environment variable value;
     - @{{propname}}      : a inProperties property name;
     - timestamp{{pattern[::tZone]]}} : return the current timestamp, in optional tZone value,
                                        formatted as 'pattern'
     - dateformat{{date::source-pattern::dest-pattern[::source-tZone::dest-tZone]}} :
                               reformat 'date' from 'source-pattern' to 'dest-pattern',
                               and optionally from 'source-tZone' to 'dest-tZone'
     - decode{{field[::cond1::val1][::cond2::val2][cond...n::val...n]::default}} :
                               evaluate as if-then-else; if 'field' is equal to cond1...n,
                               return the value of val1...n, otherwise 'default'
     - decodeL{{sep::field[::cond1::val1][::cond2::val2][cond...n::val...n]::default}} :
                               is equivalent to 'decode', with the difference that 'condX'
                               can be a list of values separated by 'sep'
     - script{{lang::[scope::]script}} : evaluate a 'lang' script, using the base context 'scope'
     - js{{[scope::]script}} : evaluate a JavaScript script, using the context 'scope'
     - ognl{{script}}        : evaluate a OGNL script
     - sql{{[conn::]statement}}     : execute a select sql statement sql and return the value of
                                      the first field of the first selected record.
                                      The 'conn' parameter is the JNDI name of a DataSource,
                                      if not defined is used the current connection
     - sqllist{{[conn::]statement}} : execute a select sql statement sql and return the value of
                                      the first field of all selected records as a comma separated list.
                                      The 'conn' parameter is the JNDI name of a DataSource,
                                      if not defined is used the current connection
     - sqltable{{conn::statement}}  : executes a select sql statement and returns all values of
                                      returned cursor as an XML.
                                      The 'conn' parameter is the JNDI name of a DataSource

    #NotNull
-->
<!ATTLIST DHVariable value CDATA #REQUIRED>


<!--
    #SortChild
-->
<!ELEMENT GVDataHandlerConfiguration (Description?, RetrieverConfig?, DBOBuilder*)>
<!ATTLIST GVDataHandlerConfiguration version CDATA #FIXED "1.0">
<!--
    Element type 'module'.
-->
<!ATTLIST GVDataHandlerConfiguration type    CDATA   #FIXED  "module">
<!--
    Module name always set to 'DH_ENGINE'.
-->
<!ATTLIST GVDataHandlerConfiguration name    CDATA   #FIXED  "DH_ENGINE">
