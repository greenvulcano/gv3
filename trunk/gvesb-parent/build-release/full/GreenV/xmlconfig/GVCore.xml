<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE GVCore SYSTEM "http://www.greenvulcano.com/gvesb/dtds/GVCore.dtd">

<GVCore version="1.0">
    <GVCryptoHelper name="CRYPTO_HELPER" type="module">
        <KeyStoreID id="WSS_service" key-store-name="service.jks" key-store-prv="SUN"
                    key-store-pwd="{3DES}41OE8r5rJLM=" key-store-type="JKS"/>
        <KeyStoreID id="WSS_client" key-store-name="client.jks" key-store-prv="SUN"
                    key-store-pwd="{3DES}oh2yh6P0/L8=" key-store-type="JKS"/>
    </GVCryptoHelper>
    <GVXPath name="XPATH" type="module">
        <XPath xpath-factory="it.greenvulcano.util.xpath.search.jaxen.JaxenXPathAPIFactoryImpl">
            <Description>Extension functions and namespaces for XPath.</Description>
            <XPathExtension class="it.greenvulcano.util.xpath.search.extension.ExternalDocumentXPathFunction"
                            function-name="document">
                <Description>Accede ad un documento esterno. Uso: gvf:document(&apos;xml file path&apos;)</Description>
            </XPathExtension>
            <XPathNamespace namespace="http://www.w3.org/2001/XMLSchema" prefix="xsd"/>
            <XPathNamespace namespace="http://www.w3.org/2001/XMLSchema-instance"
                            prefix="xsi"/>
            <XPathNamespace namespace="http://schemas.xmlsoap.org/wsdl/soap/"
                            prefix="soap"/>
            <XPathNamespace namespace="http://schemas.xmlsoap.org/wsdl/" prefix="wsdl"/>
            <XPathNamespace namespace="http://jakarta.apache.org/log4j/" prefix="log4j"/>
            <XPathNamespace namespace="http://www.w3.org/XML/1998/namespace" prefix="xml"/>
            <XPathNamespace namespace="http://www.greenvulcano.it/greenvulcano"
                            prefix="gvesbws"/>
            <XPathNamespace namespace="http://www.eaisoftware.it/jarad" prefix="jarad"/>
            <XPathNamespace namespace="http://www.credit.com/services" prefix="cred"/>
            <XPathNamespace namespace="http://www.greenvulcano.it/ldap" prefix="ldapc"/>
            <XPathNamespace namespace="http://drools.org/drools-5.0/change-set"
                            prefix="drools-cs"/>
        </XPath>
    </GVXPath>
    <GVForwards name="JMS_FORWARD" type="module">
        <ForwardConfiguration dump-message="true" enabled="true"
                              name="ToupperA" forwardName="FWD_TOUPPER_A"
                              ref-dp="ReadString_JMSBytesMessageDataProvider">
            <ForwardDeployment connection-factory="java:/XAConnectionFactory"
                               destination="gvesb/jms/queue/TOUPPER_A_Request_Queue"
                               destination-type="queue" reconnect-interval-sec="10"
                               transacted="true" transaction-timeout-sec="30">
                <XAHelper auto-enlist="false" transaction-status="TMSUCCESS"/>
            </ForwardDeployment>
        </ForwardConfiguration>
    </GVForwards>
    <GVPoolManager name="POOL_MANAGER" type="module">
        <GreenVulcanoPool default-timeout="5000" initial-size="1" maximum-creation="10"
                          maximum-size="5" shrink-timeout="120000"
                          subsystem="J2EEGreenVulcano"/>
        <GreenVulcanoPool default-timeout="5000" initial-size="1" maximum-creation="10"
                          maximum-size="5" shrink-timeout="120000" subsystem="JMSForward"/>
        <GreenVulcanoPool default-timeout="5000" initial-size="1" maximum-creation="10"
                          maximum-size="5" shrink-timeout="120000"
                          subsystem="GreenVulcano-TimerTask"/>
        <GreenVulcanoPool default-timeout="5000" initial-size="1" maximum-creation="10"
                          maximum-size="5" shrink-timeout="120000"
                          subsystem="GreenVulcano-WebServices"/>
        <GreenVulcanoPool default-timeout="5000" initial-size="1" maximum-creation="10"
                          maximum-size="5" shrink-timeout="120000"
                          subsystem="HttpInboundGateway"/>
        <GreenVulcanoPool default-timeout="5000" initial-size="1" maximum-creation="10"
                          maximum-size="5" shrink-timeout="120000"
                          subsystem="GVHL7Listener"/>
    </GVPoolManager>
    <GVServices name="SERVICES" type="module">
        <BpelEngineConfiguration deployMentUnitProcess="${{gv.app.home}}/BpelProcess"
                                 startServer="true" transactionTimeout="30">
            <EngineProperties name="gv-bpel.tx.factory.class"
                              value="org.apache.ode.axis2.util.JBossFactory"/>
            <EngineProperties name="gv-bpel.event.listeners"
                              value="org.apache.ode.bpel.common.evt.DebugBpelEventListener"/>
            <EngineProperties name="gv-bpel.db.ext.dataSource" value="ds.ode"/>
            <EngineProperties name="gv-bpel.db.mode" value="EXTERNAL"/>
            <EngineProperties name="gv-bpel.dao.factory"
                              value="org.apache.ode.daohib.bpel.BpelDAOConnectionFactoryImpl"/>
            <EngineProperties name="jta.UserTransaction" value="UserTransaction"/>
            <EngineProperties name="hibernate.hbm2ddl.auto" value="update"/>
        </BpelEngineConfiguration>
        <Management call-administration-on-init="no"/>
        <Persistence enabled="true" jdbc-connection-name="pool_persistence">
            <SequenceSQL>select recovery_seq.nextval from dual</SequenceSQL>
        </Persistence>
        <Groups>
            <Description>This section contains all the service groups.</Description>
            <Group group-activation="on" id-group="DEFAULT_GRP"/>
            <Group group-activation="on" id-group="CREDIT_GRP"/>
        </Groups>
        <Services>
            <Description>This section contains a list of all services provided by GreenVulcano ESB</Description>
            <Service group-name="DEFAULT_GRP" id-service="TOUPPER"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" out-check-type="sys-svc-id"  
                           type="operation" class="it.greenvulcano.gvesb.core.flow.GVFlowWF">
                    <Participant id-channel="TEST_CHANNEL" id-system="GVESB"/>
                    <Flow first-node="call_server" point-x="20" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="call_server" id-system="GVESB" input="input"
                                         next-node-id="end" op-type="call"
                                         operation-name="toupper_call" output="output"
                                         point-x="186" point-y="152" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="output" point-x="386" point-y="150"
                                   type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="TOUPPER#WS"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" out-check-type="none"  
                           type="operation" class="it.greenvulcano.gvesb.core.flow.GVFlowWF">
                    <Participant id-channel="TEST_CHANNEL_WS" id-system="GVESB_WS"/>
                    <Flow first-node="call_ws" point-x="20" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="call_ws" id-system="GVESB_WS" input="input"
                                         next-node-id="end" op-type="call"
                                         operation-name="toupper_WSS" output="output"
                                         point-x="266" point-y="145" type="flow-node">
                            <OutputServices>
                                <ognl-script-service critical="yes" internal="yes"
                                                     type="service">
                                    <ognl-script-call class="it.greenvulcano.gvesb.virtual.internal.OGNLCallOperation"
                                                      name="serializeDOM" type="call">
                                        <OGNLScript>#document=@it.greenvulcano.util.xml.XMLUtils@parseObject_S(object,false,true),
                      setObject(@it.greenvulcano.util.xml.XMLUtils@get_S(#document,&apos;//gvesbws:resultUp&apos;))</OGNLScript>
                                    </ognl-script-call>
                                </ognl-script-service>
                            </OutputServices>
                        </GVOperationNode>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="output" point-x="457" point-y="144"
                                   type="flow-node"/>
                    </Flow>
                </Operation>
                <Operation forward-name="execToupper" name="Forward"
                           operation-activation="on" out-check-type="sys-svc-id"
                           type="operation" class="it.greenvulcano.gvesb.core.flow.GVFlowWF">
                    <Participant id-channel="TEST_CHANNEL" id-system="GVESB"/>
                    <Flow first-node="call_server" point-x="20" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="call_server" id-system="GVESB" input="input"
                                         next-node-id="end" op-type="call"
                                         operation-name="toupper_call" output="output"
                                         point-x="159" point-y="144" type="flow-node">
                            <InputServices>
                                <ognl-script-service critical="yes" internal="yes"
                                                     type="service">
                                    <ognl-script-call class="it.greenvulcano.gvesb.virtual.internal.OGNLCallOperation"
                                                      name="serializeDOM" type="call">
                                        <OGNLScript>#document=@it.greenvulcano.util.xml.XMLUtils@parseObject_S(object,false,true),
                      setObject(@it.greenvulcano.util.xml.XMLUtils@get_S(#document,&apos;//gvesbws:str&apos;))</OGNLScript>
                                    </ognl-script-call>
                                </ognl-script-service>
                            </InputServices>
                        </GVOperationNode>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="output" point-x="338" point-y="146"
                                   type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="TOUPPER_A"
                     service-activation="on" statistics="off">
                <Operation name="Request" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Participant id-channel="TEST_CHANNEL_A" id-system="GVESB"/>
                    <Flow first-node="enqueue_request" point-x="20" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="enqueue_request" id-system="GVESB"
                                         input="input" next-node-id="end"
                                         op-type="enqueue"
                                         operation-name="JMSEnqueueTo::TOUPPER_A_Req"
                                         output="output" point-x="147" point-y="146"
                                         type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="no" id="end" op-type="end"
                                   output="output" point-x="337" point-y="146"
                                   type="flow-node">
                            <ChangeGVBuffer clear-data="true"/>
                        </GVEndNode>
                    </Flow>
                </Operation>
                <Operation name="GetReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Participant id-channel="TEST_CHANNEL_A" id-system="GVESB"/>
                    <Flow first-node="dequeue_response" point-x="20" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="dequeue_response" id-system="GVESB"
                                         input="input" next-node-id="end"
                                         op-type="dequeue"
                                         operation-name="JMSDequeueFrom::TOUPPER_A_Resp"
                                         output="output" point-x="149" point-y="142"
                                         type="flow-node">
                            <DequeueFilter>
                                <IDFilter enabled="yes" name="IDFilter" type="filter"
                                          use-input="yes"/>
                            </DequeueFilter>
                        </GVOperationNode>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="output" point-x="410" point-y="148"
                                   type="flow-node"/>
                    </Flow>
                </Operation>
                <Operation forward-name="FWD_TOUPPER_A" name="Forward"
                           operation-activation="on" out-check-type="none"
                           type="operation" class="it.greenvulcano.gvesb.core.flow.GVFlowWF">
                    <Participant id-channel="TEST_CHANNEL_A" id-system="GVESB"/>
                    <Flow first-node="call_server" point-x="20" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="call_server" id-system="GVESB" input="input"
                                         next-node-id="enqueue_response" op-type="call"
                                         operation-name="toupper_call" output="output"
                                         point-x="147" point-y="148" type="flow-node"/>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="enqueue_response" id-system="GVESB"
                                         input="output" next-node-id="end"
                                         op-type="enqueue"
                                         operation-name="JMSEnqueueTo::TOUPPER_A_Resp"
                                         output="output" point-x="319" point-y="152"
                                         type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="no" id="end" op-type="end"
                                   output="output" point-x="532" point-y="149"
                                   type="flow-node">
                            <ChangeGVBuffer clear-data="true"/>
                        </GVEndNode>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="TestProperty"
                     service-activation="on" statistics="off">
                <Operation name="Request" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Participant id-channel="TEST_CHANNEL" id-system="GVESB"/>
                    <Flow first-node="test_property" point-x="20" point-y="150">
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            dump-in-out="true" id="test_property"
                                            input="data" next-node-id="end"
                                            op-type="change GVBuffer" point-x="150"
                                            point-y="151" type="flow-node">
                            <ChangeGVBuffer clear-data="false">
                                <PropertyDef name="SQL"
                                             value="sql{{ds.gv_test::select &apos;OK&apos; from dual}}"/>
                                <PropertyDef name="SQLLIST"
                                             value="[sqllist{{ds.gv_test::|::select name from city order by 1}}]"/>
                                <PropertyDef name="TIMESTAMP"
                                             value="timestamp{{yyyyMMdd HH:mm:ss}}"/>
                                <PropertyDef name="OGNL"
                                             value="Service: ognl{{#object.getService()}}"/>
                                <PropertyDef name="JAVASCRIPT"
                                             value="System: js{{gvesb::object.getSystem()}}"/>
                                <PropertyDef name="SYSTEM"
                                             value="Server Name: ${{jboss.server.name}}"/>
                                <PropertyDef name="CLASS" value="%{{fqclass}}"/>
                                <PropertyDef name="DECODE"
                                             value="decode{{ognl{{#object.getProperty(&apos;SQL&apos;)}}::OK::Sql OK::Sql KO}}"/>
                                <PropertyDef name="MINUTE"
                                             value="Minute decode{{js{{gvesb::timestamp{{mm}} % 2 == 0}}::true::EVEN::ODD}}"/>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="data" point-x="345" point-y="151"
                                   type="flow-node">
                            <ChangeGVBuffer clear-data="true"/>
                        </GVEndNode>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="ValidateXMLFiles"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="none" type="operation">
                    <Participant id-channel="TEST_CHANNEL_FILE" id-system="GVESB"/>
                    <Flow first-node="dir_scanner" point-x="17" point-y="159">
                        <Conditions>
                            <GVBufferCondition class="it.greenvulcano.gvesb.internal.condition.GVBufferCondition"
                                               condition="CheckNumFiles" type="condition">
                                <Property name="GVFSM_EXISTING_FILES" operator="greater"
                                          type="gvbuffer-field" value="0"/>
                            </GVBufferCondition>
                        </Conditions>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="dir_scanner" id-system="GVESB" input="input"
                                         next-node-id="check_files" op-type="call"
                                         operation-name="ScanXMLFiles" output="files"
                                         point-x="132" point-y="156" type="flow-node"/>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="end_nofile" id="check_files"
                                     input="files" on-exception-id="end_notok"
                                     op-type="check" point-x="300" point-y="153"
                                     type="flow-node">
                            <GVRouting condition="CheckNumFiles"
                                       next-node-id="iterate_file_list"/>
                        </GVNodeCheck>
                        <GVIteratorOperationNode class="it.greenvulcano.gvesb.core.flow.GVIteratorOperationNode"
                                                 collection-dp="fileNamesCollectionDP"
                                                 id="iterate_file_list" input="files"
                                                 next-node-id="end_ok" op-type="call"
                                                 output="single-file" point-x="492"
                                                 point-y="151" type="flow-node">
                            <CoreCall change-log-context="true" dynamic="false"
                                      id-service="ValidateSingleXMLFile" id-system="GVESB"
                                      operation="Request"/>
                        </GVIteratorOperationNode>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="end_nofile" op-type="end" output="files"
                                   point-x="405" point-y="287" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="end_ok" op-type="end" output="files" point-x="713"
                                   point-y="148" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="end_notok" op-type="end" output="files"
                                   point-x="395" point-y="15" type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="ValidateSingleXMLFile"
                     service-activation="on" statistics="off">
                <Operation name="Request" operation-activation="on" out-check-type="none"
                           type="operation" class="it.greenvulcano.gvesb.core.flow.GVFlowWF">
                    <Participant id-channel="TEST_CHANNEL_FILE" id-system="GVESB"/>
                    <Flow first-node="fillProperties" point-x="9" point-y="31">
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            id="fillProperties" input="node"
                                            next-node-id="read_validate_file"
                                            op-type="change GVBuffer" output="input"
                                            point-x="-25" point-y="163" type="flow-node">
                            <ChangeGVBuffer clear-data="false">
                                <OGNLScript>property[&apos;FILE_NAME&apos;]=@it.greenvulcano.util.xml.XMLUtils@get_S(object,&apos;@name&apos;)</OGNLScript>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="read_validate_file" id-system="GVESB"
                                         input="input" next-node-id="check_validate"
                                         op-type="call" operation-name="ReadFile"
                                         output="payload" point-x="160" point-y="165"
                                         type="flow-node">
                            <OutputServices>
                                <xml-validation-service internal="yes" type="service">
                                    <xml-validation-call class="it.greenvulcano.gvesb.virtual.internal.xml.XMLValidationCallOperation"
                                                         default-xsd="ValidateXML.xsd"
                                                         name="ValidateXML"
                                                         return-dom="false" type="call"
                                                         xsd-policy="force-default"/>
                                </xml-validation-service>
                            </OutputServices>
                        </GVOperationNode>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="validation_ok" id="check_validate"
                                     input="payload" on-exception-id="validation_failed"
                                     op-type="check" point-x="387" point-y="165"
                                     type="flow-node"/>
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            id="validation_ok" input="input"
                                            next-node-id="move_file"
                                            op-type="change GVBuffer" output="input"
                                            point-x="393" point-y="24" type="flow-node">
                            <ChangeGVBuffer clear-data="false">
                                <OGNLScript>property[&apos;TARGET&apos;]=&apos;validated&apos;</OGNLScript>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="move_file" id-system="GVESB" input="input"
                                         next-node-id="end" op-type="call"
                                         operation-name="MoveFile" output="input"
                                         point-x="592" point-y="29" type="flow-node"/>
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            id="validation_failed" input="input"
                                            next-node-id="write_status"
                                            op-type="change GVBuffer" output="input"
                                            point-x="380" point-y="294" type="flow-node">
                            <ChangeGVBuffer clear-data="false">
                                <OGNLScript>property[&apos;TARGET&apos;]=&apos;discarded&apos;,
                                    setObject(&apos;&apos; + #environment.get(&apos;payload&apos;))</OGNLScript>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="write_status" id-system="GVESB" input="input"
                                         next-node-id="move_file" op-type="call"
                                         operation-name="WriteStatusFile" output="input"
                                         point-x="585" point-y="285" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="input" point-x="729" point-y="33"
                                   type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="ValidateRemoteXMLFiles"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="none" type="operation">
                    <Participant id-channel="TEST_CHANNEL_REMOTE_FILE" id-system="GVESB"/>
                    <Flow first-node="dir_scanner" point-x="20" point-y="150">
                        <Conditions>
                            <GVBufferCondition class="it.greenvulcano.gvesb.internal.condition.GVBufferCondition"
                                               condition="CheckNumFiles" type="condition">
                                <Property name="GVFSM_EXISTING_FILES" operator="greater"
                                          type="gvbuffer-field" value="0"/>
                            </GVBufferCondition>
                        </Conditions>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="dir_scanner" id-system="GVESB" input="input"
                                         next-node-id="check_files" op-type="call"
                                         operation-name="ScanXMLFiles" output="files"
                                         point-x="153" point-y="153" type="flow-node"/>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="end_nofile" id="check_files"
                                     input="files" on-exception-id="end_notok"
                                     op-type="check" point-x="299" point-y="148"
                                     type="flow-node">
                            <GVRouting condition="CheckNumFiles"
                                       next-node-id="iterate_file_list"/>
                        </GVNodeCheck>
                        <GVIteratorOperationNode class="it.greenvulcano.gvesb.core.flow.GVIteratorOperationNode"
                                                 collection-dp="fileNamesCollectionDP"
                                                 id="iterate_file_list" input="files"
                                                 next-node-id="end_ok" op-type="call"
                                                 output="single-file" point-x="460"
                                                 point-y="151" type="flow-node">
                            <CoreCall change-log-context="true" dynamic="false"
                                      id-service="ValidateSingleRemoteXMLFile"
                                      id-system="GVESB" operation="Request"/>
                        </GVIteratorOperationNode>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="end_nofile" op-type="end" output="files"
                                   point-x="417" point-y="-4" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="end_ok" op-type="end" output="files" point-x="690"
                                   point-y="149" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="end_notok" op-type="end" output="files"
                                   point-x="309" point-y="277" type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="ValidateSingleRemoteXMLFile"
                     service-activation="on" statistics="off">
                <Operation name="Request" operation-activation="on" out-check-type="none"
                           type="operation" class="it.greenvulcano.gvesb.core.flow.GVFlowWF">
                    <Participant id-channel="TEST_CHANNEL_REMOTE_FILE" id-system="GVESB"/>
                    <Flow first-node="fillProperties" point-x="1" point-y="49">
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            id="fillProperties" input="node"
                                            next-node-id="read_validate_file"
                                            op-type="change GVBuffer" output="input"
                                            point-x="-15" point-y="160" type="flow-node">
                            <ChangeGVBuffer clear-data="false">
                                <OGNLScript>property[&apos;FILE_NAME&apos;]=@it.greenvulcano.util.xml.XMLUtils@get_S(object,&apos;@name&apos;)</OGNLScript>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="read_validate_file" id-system="GVESB"
                                         input="input" next-node-id="check_validate"
                                         op-type="call" operation-name="ReadFile"
                                         output="payload" point-x="178" point-y="154"
                                         type="flow-node">
                            <OutputServices>
                                <xml-validation-service internal="yes" type="service">
                                    <xml-validation-call class="it.greenvulcano.gvesb.virtual.internal.xml.XMLValidationCallOperation"
                                                         default-xsd="ValidateXML.xsd"
                                                         name="ValidateXML"
                                                         return-dom="false" type="call"
                                                         xsd-policy="force-default"/>
                                </xml-validation-service>
                            </OutputServices>
                        </GVOperationNode>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="validation_ok" id="check_validate"
                                     input="payload" on-exception-id="validation_failed"
                                     op-type="check" point-x="397" point-y="145"
                                     type="flow-node"/>
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            id="validation_ok" input="input"
                                            next-node-id="move_file"
                                            op-type="change GVBuffer" output="input"
                                            point-x="405" point-y="21" type="flow-node">
                            <ChangeGVBuffer clear-data="false">
                                <OGNLScript>property[&apos;TARGET&apos;]=&apos;validated&apos;</OGNLScript>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="move_file" id-system="GVESB" input="input"
                                         next-node-id="end" op-type="call"
                                         operation-name="MoveFile" output="input"
                                         point-x="628" point-y="17" type="flow-node"/>
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            id="validation_failed" input="input"
                                            next-node-id="write_status"
                                            op-type="change GVBuffer" output="input"
                                            point-x="395" point-y="276" type="flow-node">
                            <ChangeGVBuffer clear-data="false">
                                <OGNLScript>property[&apos;TARGET&apos;]=&apos;discarded&apos;,
                                    setObject(&apos;&apos; + #environment.get(&apos;payload&apos;))</OGNLScript>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="write_status" id-system="GVESB" input="input"
                                         next-node-id="move_file" op-type="call"
                                         operation-name="WriteStatusFile" output="input"
                                         point-x="628" point-y="263" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="input" point-x="747" point-y="21"
                                   type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="CREDIT_GRP" id-service="ProcessSVCEmails"
                     service-activation="on" statistics="off">
                <Operation name="Request" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Participant id-channel="CHANNEL_CREDIT_MAIL" id-system="CREDIT"/>
                    <Flow first-node="check_pop" point-x="20" point-y="150">
                        <Conditions>
                            <GVBufferCondition class="it.greenvulcano.gvesb.internal.condition.GVBufferCondition"
                                               condition="EmailPresent" type="condition">
                                <Property name="POP_MESSAGE_COUNT" operator="greater"
                                          type="gvbuffer-field" value="0"
                                          value-type="integer"/>
                            </GVBufferCondition>
                        </Conditions>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="check_pop"
                                         id-system="CREDIT" input="input"
                                         next-node-id="check_status" op-type="call"
                                         operation-name="ReceiveSVCEmail" output="emails"
                                         point-x="152" point-y="144" type="flow-node"/>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="end-noemail" id="check_status"
                                     input="emails" on-exception-id="end-poperror"
                                     op-type="check" point-x="303" point-y="146"
                                     type="flow-node">
                            <GVRouting condition="EmailPresent" next-node-id="process"/>
                        </GVNodeCheck>
                        <GVIteratorOperationNode class="it.greenvulcano.gvesb.core.flow.GVIteratorOperationNode"
                                                 collection-dp="CREDIT::SVCEmailListDataProvider"
                                                 id="process" input="emails"
                                                 next-node-id="end" op-type="call"
                                                 output="processed" point-x="511"
                                                 point-y="157" type="flow-node">
                            <CoreCall change-log-context="true" dynamic="false"
                                      id-service="ProcessSingleSVCEmail"
                                      id-system="CREDIT" operation="Request"
                                      ref-dp="stringSerializeNodeDataProvider"/>
                        </GVIteratorOperationNode>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end-noemail"
                                   op-type="end" output="emails" point-x="496"
                                   point-y="34" type="flow-node">
                            <ChangeGVBuffer clear-data="true"/>
                        </GVEndNode>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end-poperror"
                                   op-type="end" output="emails" point-x="497"
                                   point-y="292" type="flow-node">
                            <ChangeGVBuffer clear-data="true"/>
                        </GVEndNode>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="processed" point-x="686" point-y="155"
                                   type="flow-node">
                            <ChangeGVBuffer clear-data="true"/>
                        </GVEndNode>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="CREDIT_GRP" id-service="ProcessSingleSVCEmail"
                     service-activation="on" statistics="off">
                <Operation forward-name="LIST_BIRT" name="Forward"
                           operation-activation="on" out-check-type="sys-svc-id"
                           type="operation" class="it.greenvulcano.gvesb.core.flow.GVFlowWF">
                    <Participant id-channel="CHANNEL_CREDIT_MAIL" id-system="CREDIT"/>
                    <Flow first-node="extract_data" point-x="19" point-y="137">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="extract_data"
                                         id-system="CREDIT" input="to_process"
                                         next-node-id="add_ext" op-type="call"
                                         operation-name="CreditCards" output="data"
                                         point-x="149" point-y="140" type="flow-node"/>
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            dump-in-out="false" id="add_ext" input="data"
                                            next-node-id="send_email"
                                            op-type="change GVBuffer" point-x="309"
                                            point-y="137" type="flow-node">
                            <ChangeGVBuffer clear-data="false">
                                <PropertyDef name="FILE_EXT"
                                             value="decode{{ognl{{property[&apos;BIRT_REPORT_TYPE&apos;]}}::excel::xls::pdf}}"/>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="send_email"
                                         id-system="CREDIT" input="data"
                                         next-node-id="end" op-type="call"
                                         operation-name="SendEmailSVCResponse"
                                         output="data" point-x="473" point-y="137"
                                         type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="data" point-x="671" point-y="137"
                                   type="flow-node">
                            <ChangeGVBuffer clear-data="true"/>
                        </GVEndNode>
                    </Flow>
                </Operation>
                <Operation name="Request" operation-activation="on" out-check-type="none"
                           type="operation" class="it.greenvulcano.gvesb.core.flow.GVFlowWF">
                    <Participant id-channel="CHANNEL_CREDIT_MAIL" id-system="CREDIT"/>
                    <Flow first-node="prepare" point-x="24" point-y="56">
                        <Conditions>
                            <JavaScriptCondition class="it.greenvulcano.gvesb.internal.condition.JavaScriptCondition"
                                                 condition="CheckServiceName"
                                                 scope-name="gvesb" type="condition">
                                <Script>var services = {&quot;LIST_EXCEL&quot;:&quot;1&quot;, &quot;LIST_PDF&quot;:&quot;1&quot;, &quot;LIST_BIRT&quot;:&quot;1&quot;};
var data = environment.get(dataName);
var svc = data.getProperty(&quot;SVC&quot;);
(&quot;1&quot; == services[svc]);</Script>
                            </JavaScriptCondition>
                        </Conditions>
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            dump-in-out="true" id="prepare" input="input"
                                            next-node-id="check_service"
                                            op-type="change GVBuffer" output="prepared"
                                            point-x="87" point-y="139" type="flow-node">
                            <ChangeGVBuffer clear-data="false" scope-name="gvesb">
                                <Script>var doc=XMLUtils.parseObject_S(data.getObject(),false,true);
                var subject = XMLUtils.get_S(doc,&apos;/Message/Subject&apos;, &apos;NULL&apos;);
                data.setProperty(&quot;SUBJECT&quot;,subject);
                var to = XMLUtils.get_S(doc,&apos;/Message/ReplyTo&apos;, &apos;NULL&apos;);
                data.setProperty(&quot;GV_SMTP_TO&quot;,to);
                var cc = XMLUtils.get_S(doc,&apos;/Message/Cc&apos;, &apos;NULL&apos;);
                if (cc != &apos;NULL&apos;) {
                  data.setProperty(&quot;GV_SMTP_CC&quot;,cc);
                };
                data.setProperty(&apos;NAME&apos;, &apos;NULL&apos;);
                data.setProperty(&apos;TYPE&apos;, &apos;PDF&apos;);
                var items = subject.trim().split(&quot;!&quot;);
                for (i=0; i &lt; items.length; i++) {
                      var  item = items[i].trim().split(&quot;=&quot;);
                      if (item.length &gt; 1) {
                          var name = item[0].trim();
                          var value = item[1].trim();

                          data.setProperty(name,value);
                      }
                };
                data.setProperty(&apos;BIRT_REPORT_TYPE&apos;, data.getProperty(&apos;TYPE&apos;).toLowerCase());</Script>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="send_nosvc_email" id="check_service"
                                     input="prepared" on-exception-id="end-exc"
                                     op-type="check" point-x="212" point-y="144"
                                     type="flow-node">
                            <GVRouting condition="CheckServiceName"
                                       next-node-id="send_user_data"/>
                        </GVNodeCheck>
                        <GVCoreCallNode change-log-context="true"
                                        class="it.greenvulcano.gvesb.core.flow.GVCoreCallNode"
                                        dynamic="true" id="send_user_data"
                                        id-service="ProcessSingleSVCEmail"
                                        id-system="CREDIT" input="prepared"
                                        next-node-id="check_status" op-type="corecall"
                                        operation="ognl{{#object.getProperty(&apos;SVC&apos;)}}"
                                        output="output" overwrite-sys-svc="true"
                                        point-x="412" point-y="139" type="flow-node"/>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="send_nosvc_email"
                                         id-system="CREDIT" input="prepared"
                                         next-node-id="check_status" op-type="call"
                                         operation-name="SendEmailNoSVC" output="output"
                                         point-x="411" point-y="232" type="flow-node"/>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="end" id="check_status" input="output"
                                     on-exception-id="end-exc" op-type="check"
                                     point-x="597" point-y="136" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end-exc" op-type="end"
                                   output="output" point-x="430" point-y="317"
                                   type="flow-node">
                            <ChangeGVBuffer clear-data="true"/>
                        </GVEndNode>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="output" point-x="741" point-y="23"
                                   type="flow-node">
                            <ChangeGVBuffer clear-data="true"/>
                        </GVEndNode>
                    </Flow>
                </Operation>
                <Operation forward-name="LIST_EXCEL" name="Forward"
                           operation-activation="on" out-check-type="sys-svc-id"
                           type="operation" class="it.greenvulcano.gvesb.core.flow.GVFlowWF">
                    <Participant id-channel="CHANNEL_CREDIT_MAIL" id-system="CREDIT"/>
                    <Flow first-node="extract_data" point-x="19" point-y="137">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="extract_data"
                                         id-system="CREDIT" input="to_process"
                                         next-node-id="add_ext" op-type="call"
                                         operation-name="listPerson" output="data"
                                         point-x="149" point-y="140" type="flow-node"/>
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            dump-in-out="false" id="add_ext" input="data"
                                            next-node-id="send_email"
                                            op-type="change GVBuffer" point-x="309"
                                            point-y="137" type="flow-node">
                            <ChangeGVBuffer clear-data="false">
                                <PropertyDef name="FILE_EXT" value="xls"/>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="send_email"
                                         id-system="CREDIT" input="data"
                                         next-node-id="end" op-type="call"
                                         operation-name="SendEmailSVCResponse"
                                         output="data" point-x="473" point-y="137"
                                         type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="data" point-x="671" point-y="137"
                                   type="flow-node">
                            <ChangeGVBuffer clear-data="true"/>
                        </GVEndNode>
                    </Flow>
                </Operation>
                <Operation forward-name="LIST_PDF" name="Forward"
                           operation-activation="on" out-check-type="sys-svc-id"
                           type="operation" class="it.greenvulcano.gvesb.core.flow.GVFlowWF">
                    <Participant id-channel="CHANNEL_CREDIT_MAIL" id-system="CREDIT"/>
                    <Flow first-node="extract_data" point-x="20" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="extract_data"
                                         id-system="CREDIT" input="to_process"
                                         next-node-id="add_ext" op-type="call"
                                         operation-name="UserDataAsPDF" output="data"
                                         point-x="150" point-y="151" type="flow-node">
                            <InputServices>
                                <ognl-script-service critical="yes" internal="yes"
                                                     type="service">
                                    <ognl-script-call class="it.greenvulcano.gvesb.virtual.internal.OGNLCallOperation"
                                                      name="setDBService" type="call">
                                        <OGNLScript>setProperty(&quot;DH_SERVICE_NAME&quot;, &quot;UserDataAsPDF&quot;)</OGNLScript>
                                    </ognl-script-call>
                                </ognl-script-service>
                            </InputServices>
                        </GVOperationNode>
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            dump-in-out="false" id="add_ext" input="data"
                                            next-node-id="send_email"
                                            op-type="change GVBuffer" point-x="320"
                                            point-y="154" type="flow-node">
                            <ChangeGVBuffer clear-data="false">
                                <PropertyDef name="FILE_EXT" value="pdf"/>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="send_email"
                                         id-system="CREDIT" input="data"
                                         next-node-id="end" op-type="call"
                                         operation-name="SendEmailSVCResponse"
                                         output="data" point-x="454" point-y="154"
                                         type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="data" point-x="620" point-y="149"
                                   type="flow-node">
                            <ChangeGVBuffer clear-data="true"/>
                        </GVEndNode>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="EmailFileAttachment"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Participant id-channel="TEST_CHANNEL_FILE" id-system="GVESB"/>
                    <Flow first-node="list_files" point-x="21" point-y="38">
                        <Conditions>
                            <GVBufferCondition class="it.greenvulcano.gvesb.internal.condition.GVBufferCondition"
                                               condition="FilesFound" type="condition">
                                <Property name="GVFM_FOUND_FILES_NUM" operator="greater"
                                          type="gvbuffer-field" value="0"
                                          value-type="integer"/>
                            </GVBufferCondition>
                        </Conditions>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="list_files"
                                         id-system="GVESB" input="input"
                                         next-node-id="check_files" op-type="call"
                                         operation-name="ScanAttachments" output="files"
                                         point-x="22" point-y="165" type="flow-node"/>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="end-nofiles" id="check_files"
                                     input="files" on-exception-id="end" op-type="check"
                                     point-x="203" point-y="169" type="flow-node">
                            <GVRouting condition="FilesFound" next-node-id="prepare"/>
                        </GVNodeCheck>
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            dump-in-out="true" id="prepare" input="files"
                                            next-node-id="send_email"
                                            op-type="change GVBuffer" output="files"
                                            point-x="225" point-y="302" type="flow-node">
                            <ChangeGVBuffer clear-data="false">
                                <OGNLScript>property[&apos;GV_SMTP_ATTACHMENTS&apos;] = property[&apos;GVFM_FOUND_FILES_LIST&apos;]</OGNLScript>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="send_email"
                                         id-system="GVESB" input="files"
                                         next-node-id="move_files" op-type="call"
                                         operation-name="SendEmail" output="files"
                                         point-x="384" point-y="309" type="flow-node"/>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="move_files"
                                         id-system="GVESB" input="files"
                                         next-node-id="end" op-type="call"
                                         operation-name="MoveAttachments" output="files"
                                         point-x="519" point-y="301" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end-nofiles"
                                   op-type="end" output="files" point-x="374" point-y="53"
                                   type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="files" point-x="572" point-y="168"
                                   type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="CREDIT_GRP" id-service="SearchPerson"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Participant id-channel="CHANNEL_CREDIT_DB" id-system="CREDIT"/>
                    <Flow first-node="select" point-x="20" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="select"
                                         id-system="CREDIT" input="input"
                                         next-node-id="end" op-type="call"
                                         operation-name="DataHandler" output="output"
                                         point-x="177" point-y="151" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="output" point-x="336" point-y="156"
                                   type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="CREDIT_GRP" id-service="CreditUpdate"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Participant id-channel="CHANNEL_CREDIT_DB" id-system="CREDIT"/>
                    <Flow first-node="update" point-x="20" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="update"
                                         id-system="CREDIT" input="input"
                                         next-node-id="end" op-type="call"
                                         operation-name="DataHandler" output="output"
                                         point-x="164" point-y="148" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="output" point-x="322" point-y="149"
                                   type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="CREDIT_GRP" id-service="CCardQuery"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Participant id-channel="CHANNEL_CREDIT_WS" id-system="CREDIT"/>
                    <Participant id-channel="CHANNEL_CREDIT_EXT"
                                 id-system="CREDIT_EXTERNAL"/>
                    <Flow first-node="prepare" point-x="20" point-y="150">
                        <Conditions>
                            <GVBufferCondition class="it.greenvulcano.gvesb.internal.condition.GVBufferCondition"
                                               condition="isInternalCCard"
                                               type="condition">
                                <Property name="IS_INTERNAL" operator="equal"
                                          type="gvbuffer-field" value="true"
                                          value-type="text"/>
                            </GVBufferCondition>
                        </Conditions>
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            dump-in-out="true" id="prepare" input="input"
                                            next-node-id="check_internal"
                                            op-type="change GVBuffer" output="input"
                                            point-x="121" point-y="149" type="flow-node">
                            <ChangeGVBuffer clear-data="false">
                                <PropertyDef name="CNUMBER"
                                             value="js{{gvesb::var doc=XMLUtils.parseObject_S(object.getObject(),false,true); XMLUtils.get_S(doc,&apos;//cred:cnumber&apos;)}}"/>
                                <PropertyDef name="IS_INTERNAL"
                                             value="sql{{ds.gv_test::select decode(count(*), 1, &apos;true&apos;, &apos;false&apos;) from credit_card where cnumber=ognl{{#object.getProperty(&apos;CNUMBER&apos;)}}}}"/>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="search_external" id="check_internal"
                                     input="input" on-exception-id="end" op-type="check"
                                     point-x="263" point-y="155" type="flow-node">
                            <GVRouting condition="isInternalCCard"
                                       next-node-id="search_internal"/>
                        </GVNodeCheck>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="search_internal"
                                         id-system="CREDIT" input="input"
                                         next-node-id="end" op-type="call"
                                         operation-name="DataHandler" output="output"
                                         point-x="387" point-y="262" type="flow-node"/>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="search_external"
                                         id-system="CREDIT_EXTERNAL" input="input"
                                         next-node-id="end" op-type="call"
                                         operation-name="QueryExternal" output="output"
                                         point-x="385" point-y="55" type="flow-node">
                            <InputServices>
                                <gvdte-service critical="yes" internal="yes"
                                               remove-fields="yes" type="service">
                                    <map-name-param name="map-name" type="param"
                                                    value="QueryExternalInput"/>
                                    <gvdte-context-call class="it.greenvulcano.gvesb.virtual.internal.DTEServiceContextCall"
                                                        name="QueryExternalInput"
                                                        type="call"/>
                                </gvdte-service>
                            </InputServices>
                            <OutputServices>
                                <gvdte-service critical="yes" internal="yes"
                                               remove-fields="yes" type="service">
                                    <map-name-param name="map-name" type="param"
                                                    value="QueryExternalOutput"/>
                                    <gvdte-context-call class="it.greenvulcano.gvesb.virtual.internal.DTEServiceContextCall"
                                                        name="QueryExternalOutput"
                                                        type="call"/>
                                </gvdte-service>
                            </OutputServices>
                        </GVOperationNode>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="output" point-x="616" point-y="169"
                                   type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="CREDIT_GRP" id-service="CCardPay" service-activation="on"
                     statistics="off">
                <Operation name="RequestReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Participant id-channel="CHANNEL_CREDIT_WS" id-system="CREDIT"/>
                    <Participant id-channel="CHANNEL_CREDIT_EXT"
                                 id-system="CREDIT_EXTERNAL"/>
                    <Flow first-node="prepare" point-x="20" point-y="150">
                        <Conditions>
                            <GVBufferCondition class="it.greenvulcano.gvesb.internal.condition.GVBufferCondition"
                                               condition="isInternalCCard"
                                               type="condition">
                                <Property name="IS_INTERNAL" operator="equal"
                                          type="gvbuffer-field" value="true"
                                          value-type="text"/>
                            </GVBufferCondition>
                        </Conditions>
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            dump-in-out="true" id="prepare" input="input"
                                            next-node-id="check_internal"
                                            op-type="change GVBuffer" output="input"
                                            point-x="136" point-y="154" type="flow-node">
                            <ChangeGVBuffer clear-data="false">
                                <PropertyDef name="CNUMBER"
                                             value="js{{gvesb::var doc=XMLUtils.parseObject_S(object.getObject(),false,true); XMLUtils.get_S(doc,&apos;//cred:cnumber&apos;)}}"/>
                                <PropertyDef name="IS_INTERNAL"
                                             value="sql{{ds.gv_test::select decode(count(*), 1, &apos;true&apos;, &apos;false&apos;) from credit_card where cnumber=ognl{{#object.getProperty(&apos;CNUMBER&apos;)}}}}"/>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="pay_external" id="check_internal"
                                     input="input" on-exception-id="end" op-type="check"
                                     point-x="264" point-y="160" type="flow-node">
                            <GVRouting condition="isInternalCCard"
                                       next-node-id="pay_internal"/>
                        </GVNodeCheck>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="pay_internal"
                                         id-system="CREDIT" input="input"
                                         next-node-id="end" op-type="call"
                                         operation-name="DataHandler" output="output"
                                         point-x="344" point-y="276" type="flow-node"/>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="pay_external"
                                         id-system="CREDIT_EXTERNAL" input="input"
                                         next-node-id="end" op-type="call"
                                         operation-name="PayExternal" output="output"
                                         point-x="346" point-y="37" type="flow-node">
                            <InputServices>
                                <gvdte-service critical="yes" internal="yes"
                                               remove-fields="yes" type="service">
                                    <map-name-param name="map-name" type="param"
                                                    value="PayExternalInput"/>
                                    <gvdte-context-call class="it.greenvulcano.gvesb.virtual.internal.DTEServiceContextCall"
                                                        name="PayExternalInput"
                                                        type="call"/>
                                </gvdte-service>
                            </InputServices>
                            <OutputServices>
                                <gvdte-service critical="yes" internal="yes"
                                               remove-fields="yes" type="service">
                                    <map-name-param name="map-name" type="param"
                                                    value="PayExternalOutput"/>
                                    <gvdte-context-call class="it.greenvulcano.gvesb.virtual.internal.DTEServiceContextCall"
                                                        name="PayExternalOutput"
                                                        type="call"/>
                                </gvdte-service>
                            </OutputServices>
                        </GVOperationNode>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="output" point-x="600" point-y="143"
                                   type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="CREDIT_GRP" id-service="PersonInsertFull#CREDIT"
                     service-activation="on" statistics="off">
                <Operation name="Request" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Participant id-channel="CHANNEL_CREDIT_DB" id-system="CREDIT"/>
                    <Flow first-node="insert" point-x="20" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="insert"
                                         id-system="CREDIT" input="input"
                                         next-node-id="end" op-type="call"
                                         operation-name="DataHandler" output="output"
                                         point-x="172" point-y="143" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="output" point-x="363" point-y="154"
                                   type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="CREDIT_GRP" id-service="PersonInsertFull#CREDIT_SIMPLE"
                     service-activation="on" statistics="off">
                <Operation name="Request" operation-activation="on" out-check-type="none"
                           type="operation" class="it.greenvulcano.gvesb.core.flow.GVFlowWF">
                    <Participant id-channel="CHANNEL_CREDIT_DB" id-system="CREDIT_SIMPLE"/>
                    <Flow first-node="iterate_Persons" point-x="20" point-y="150">
                        <GVIteratorOperationNode class="it.greenvulcano.gvesb.core.flow.GVIteratorOperationNode"
                                                 collection-dp="PersonsCollectionDP"
                                                 id="iterate_Persons" input="input"
                                                 next-node-id="end" op-type="call"
                                                 output="output" point-x="151"
                                                 point-y="153" type="flow-node">
                            <CoreCall change-log-context="true" dynamic="false"
                                      id-service="ProcessSinglePersonUpdate"
                                      id-system="CREDIT_SIMPLE" operation="Request"
                                      ref-dp="stringSerializeNodeDataProvider"/>
                            <InputServices>
                                <gvdte-service critical="yes" internal="yes"
                                               remove-fields="yes" type="service">
                                    <map-name-param name="map-name" type="param"
                                                    value="PersonInsertFull_prepare"/>
                                    <gvdte-context-call class="it.greenvulcano.gvesb.virtual.internal.DTEServiceContextCall"
                                                        name="PersonInsertFull_prepare"
                                                        type="call"/>
                                </gvdte-service>
                            </InputServices>
                        </GVIteratorOperationNode>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="end" op-type="end" output="output" point-x="359"
                                   point-y="157" type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="CREDIT_GRP" id-service="ProcessSinglePersonUpdate"
                     service-activation="on" statistics="off">
                <Operation name="Request" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Participant id-channel="CHANNEL_CREDIT_DB" id-system="CREDIT_SIMPLE"/>
                    <Flow first-node="prepare" point-x="13" point-y="16">
                        <Conditions>
                            <GVBufferCondition class="it.greenvulcano.gvesb.internal.condition.GVBufferCondition"
                                               condition="PersonFound" type="condition">
                                <Property name="ID_PERSON" operator="different"
                                          type="gvbuffer-field" value="NULL"
                                          value-type="text"/>
                            </GVBufferCondition>
                            <GVBufferCondition class="it.greenvulcano.gvesb.internal.condition.GVBufferCondition"
                                               condition="CCardFound" type="condition">
                                <Property name="ID_CARD" operator="different"
                                          type="gvbuffer-field" value="NULL"
                                          value-type="text"/>
                            </GVBufferCondition>
                        </Conditions>
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            dump-in-out="true" id="prepare" input="input"
                                            next-node-id="search_person"
                                            op-type="change GVBuffer" output="prepared"
                                            point-x="7" point-y="166" type="flow-node">
                            <ChangeGVBuffer clear-data="false" scope-name="gvesb">
                                <Script>var doc=XMLUtils.parseObject_S(data.getObject(),false,true);
                                    data.setProperty(&apos;PERSON_NAME&apos;, XMLUtils.get_S(doc,&apos;/PersonData/Name&apos;));
                                    data.setProperty(&apos;CITY_NAME&apos;, XMLUtils.get_S(doc,&apos;/PersonData/City&apos;));
                                    data.setProperty(&apos;BIRTHDATE&apos;, XMLUtils.get_S(doc,&apos;/PersonData/BirthDate&apos;));
                                    data.setProperty(&apos;CNUMBER&apos;, XMLUtils.get_S(doc,&apos;/PersonData/CardsData/CardData/Number&apos;));
                                    data.setProperty(&apos;CREDIT&apos;, XMLUtils.get_S(doc,&apos;/PersonData/CardsData/CardData/Credit&apos;));
                                    data.setProperty(&apos;ACTIVE&apos;, XMLUtils.get_S(doc,&apos;/PersonData/CardsData/CardData/Active&apos;));</Script>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="search_person"
                                         id-system="CREDIT_SIMPLE" input="prepared"
                                         next-node-id="extract_person_id" op-type="call"
                                         operation-name="PersonSearch" output="output"
                                         point-x="137" point-y="165" type="flow-node"/>
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            dump-in-out="true" id="extract_person_id"
                                            input="output"
                                            next-node-id="check_search_person"
                                            op-type="change GVBuffer" output="output"
                                            point-x="300" point-y="31" type="flow-node">
                            <ChangeGVBuffer clear-data="false" scope-name="gvesb">
                                <Script>var doc=XMLUtils.parseObject_S(data.getObject(),false,true);
                                    data.setProperty(&apos;ID_PERSON&apos;, XMLUtils.get_S(doc,&apos;//col&apos;, &apos;NULL&apos;));</Script>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="next_person_id" id="check_search_person"
                                     input="output" on-exception-id="end-exc"
                                     op-type="check" point-x="498" point-y="24"
                                     type="flow-node">
                            <GVRouting condition="PersonFound"
                                       next-node-id="update_person"/>
                        </GVNodeCheck>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="update_person"
                                         id-system="CREDIT_SIMPLE" input="output"
                                         next-node-id="search_ccard" op-type="call"
                                         operation-name="PersonUpdate" output="output"
                                         point-x="370" point-y="191" type="flow-node"/>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="search_ccard"
                                         id-system="CREDIT_SIMPLE" input="output"
                                         next-node-id="extract_ccard_id" op-type="call"
                                         operation-name="CCardSearch" output="output"
                                         point-x="238" point-y="289" type="flow-node"/>
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            dump-in-out="true" id="extract_ccard_id"
                                            input="output"
                                            next-node-id="check_search_ccard"
                                            op-type="change GVBuffer" output="output"
                                            point-x="220" point-y="445" type="flow-node">
                            <ChangeGVBuffer clear-data="false" scope-name="gvesb">
                                <Script>var doc=XMLUtils.parseObject_S(data.getObject(),false,true);
                                    data.setProperty(&apos;ID_CARD&apos;, XMLUtils.get_S(doc,&apos;//col&apos;, &apos;NULL&apos;));</Script>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="insert_ccard" id="check_search_ccard"
                                     input="output" on-exception-id="end-exc"
                                     op-type="check" point-x="392" point-y="311"
                                     type="flow-node">
                            <GVRouting condition="CCardFound" next-node-id="update_ccard"/>
                        </GVNodeCheck>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="update_ccard"
                                         id-system="CREDIT_SIMPLE" input="output"
                                         next-node-id="end" op-type="call"
                                         operation-name="CCardUpdate" output="output"
                                         point-x="491" point-y="440" type="flow-node"/>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="next_person_id"
                                         id-system="CREDIT_SIMPLE" input="prepared"
                                         next-node-id="extract_next_person_id"
                                         op-type="call" operation-name="NextPersonID"
                                         output="output" point-x="699" point-y="69"
                                         type="flow-node"/>
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            dump-in-out="true" id="extract_next_person_id"
                                            input="output" next-node-id="insert_person"
                                            op-type="change GVBuffer" output="output"
                                            point-x="849" point-y="111" type="flow-node">
                            <ChangeGVBuffer clear-data="false" scope-name="gvesb">
                                <Script>var doc=XMLUtils.parseObject_S(data.getObject(),false,true);
                                    data.setProperty(&apos;ID_PERSON&apos;, XMLUtils.get_S(doc,&apos;//col&apos;, &apos;NULL&apos;));</Script>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="insert_person"
                                         id-system="CREDIT_SIMPLE" input="output"
                                         next-node-id="insert_ccard" op-type="call"
                                         operation-name="PersonInsert" output="output"
                                         point-x="905" point-y="279" type="flow-node"/>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="insert_ccard"
                                         id-system="CREDIT_SIMPLE" input="output"
                                         next-node-id="end" op-type="call"
                                         operation-name="CCardInsert" output="output"
                                         point-x="755" point-y="311" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end-exc" op-type="end"
                                   output="output" point-x="627" point-y="213"
                                   type="flow-node">
                            <ChangeGVBuffer clear-data="true"/>
                        </GVEndNode>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="output" point-x="708" point-y="451"
                                   type="flow-node">
                            <ChangeGVBuffer clear-data="true"/>
                        </GVEndNode>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="TestInsertXML"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Participant id-channel="TEST_CHANNEL" id-system="GVESB"/>
                    <Flow first-node="process" point-x="20" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="process"
                                         id-system="GVESB" input="input"
                                         next-node-id="end" op-type="call"
                                         operation-name="TestInsertXML" output="output"
                                         point-x="127" point-y="139" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="output" point-x="256" point-y="138"
                                   type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="TestBirt"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Participant id-channel="TEST_CHANNEL" id-system="GVESB"/>
                    <Flow first-node="generate" point-x="20" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="generate"
                                         id-system="GVESB" input="input"
                                         next-node-id="write" op-type="call"
                                         operation-name="TestBirt" output="report"
                                         point-x="172" point-y="143" type="flow-node"/>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="write" id-system="GVESB"
                                         input="report" next-node-id="end" op-type="call"
                                         operation-name="WriteReportFile" output="output"
                                         point-x="363" point-y="143" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="output" point-x="563" point-y="154"
                                   type="flow-node">
                            <ChangeGVBuffer clear-data="true"/>
                        </GVEndNode>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="SavePoint"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="none" type="operation">
                    <Participant id-channel="TEST_CHANNEL" id-system="GVESB"/>
                    <Flow first-node="echo">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="echo" id-system="GVESB" input="input"
                                         next-node-id="savepoint1" op-type="call"
                                         operation-name="echo_call" output="output"
                                         type="flow-node"/>
                        <GVSavePointNode class="it.greenvulcano.gvesb.core.flow.GVSavePointNode"
                                         id="savepoint1" input="output"
                                         next-node-id="wait1" op-type="save"
                                         type="flow-node">
                            <SpProperties>
                                <PropertyDef name="Servizio"
                                             value="Service: ognl{{#object.getService()}}"/>
                                <PropertyDef name="Sistema"
                                             value="System: js{{gvesb::object.getSystem()}}"/>
                            </SpProperties>
                        </GVSavePointNode>
                        <GVWaitNode class="it.greenvulcano.gvesb.core.flow.GVWaitNode"
                                    id="wait1" input="output" next-node-id="toupper"
                                    op-type="wait" sleep-if="gvbuffer" timeout="15000"
                                    type="flow-node"/>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="toupper" id-system="GVESB" input="output"
                                         next-node-id="savepoint2" op-type="call"
                                         operation-name="toupper_call" output="toupper"
                                         type="flow-node"/>
                        <GVSavePointNode class="it.greenvulcano.gvesb.core.flow.GVSavePointNode"
                                         id="savepoint2" input="toupper"
                                         next-node-id="wait2" op-type="save"
                                         type="flow-node">
                            <SpProperties>
                                <PropertyDef name="Servizio 2"
                                             value="Service: ognl{{#object.getService()}}"/>
                                <PropertyDef name="Sistema 2"
                                             value="System: js{{gvesb::object.getSystem()}}"/>
                            </SpProperties>
                        </GVSavePointNode>
                        <GVWaitNode class="it.greenvulcano.gvesb.core.flow.GVWaitNode"
                                    id="wait2" input="toupper" next-node-id="tolower"
                                    op-type="wait" sleep-if="gvbuffer" timeout="15000"
                                    type="flow-node"/>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="tolower" id-system="GVESB" input="toupper"
                                         next-node-id="end" op-type="call"
                                         operation-name="tolower_call" output="tolower"
                                         type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="end" keep-savepoint="true" op-type="end"
                                   output="toupper" type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="TEST_SUBFLOW"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Description>VulCon generated Operation</Description>
                    <Participant id-channel="TEST_CHANNEL" id-system="GVESB"/>
                    <Flow first-node="request" point-x="50" point-y="150">
                        <GVSubFlowCallNode change-log-context="true"
                                           class="it.greenvulcano.gvesb.core.flow.GVSubFlowCallNode"
                                           default-id="return" id="request" input="input"
                                           on-exception-id="return_error"
                                           op-type="subcall" output="output"
                                           point-x="200" point-y="150" subflow="subFlow_1"
                                           type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="return" op-type="end"
                                   output="output" point-x="700" point-y="50"
                                   type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="return_error"
                                   op-type="end" output="output" point-x="700"
                                   point-y="250" type="flow-node"/>
                    </Flow>
                    <SubFlow first-node="sub_request" name="subFlow_1" point-x="50"
                             point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="sub_request" id-system="GVESB"
                                         input="input_toupper" next-node-id="sub_return"
                                         op-type="call" operation-name="toupper_call"
                                         output="output_toupper" point-x="200"
                                         point-y="150" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="sub_return"
                                   op-type="end" output="output_toupper" point-x="700"
                                   point-y="50" type="flow-node"/>
                    </SubFlow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="SUBFLOW_ITER"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Description>VulCon generated Operation</Description>
                    <Participant id-channel="TEST_CHANNEL" id-system="GVESB"/>
                    <Flow first-node="request" point-x="50" point-y="150">
                        <GVIteratorOperationNode class="it.greenvulcano.gvesb.core.flow.GVIteratorOperationNode"
                                                 collection-dp="testXMLCollectionDP"
                                                 id="request" input="input_toupper"
                                                 next-node-id="check_status"
                                                 op-type="subcall" output="output_toupper"
                                                 point-x="200" point-y="150"
                                                 type="flow-node">
                            <SubFlowCall change-log-context="true"
                                         ref-dp="stringSerializeNodeDataProvider"
                                         subflow="subFlow_1"/>
                        </GVIteratorOperationNode>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="return_status" id="check_status"
                                     input="output_toupper" on-exception-id="return_error"
                                     op-type="check" point-x="350" point-y="150"
                                     type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="return_status"
                                   op-type="end" output="output_toupper" point-x="700"
                                   point-y="50" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="return_error"
                                   op-type="end" output="output_toupper" point-x="700"
                                   point-y="250" type="flow-node"/>
                    </Flow>
                    <SubFlow first-node="sub_request" name="subFlow_1" point-x="50"
                             point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="sub_request" id-system="GVESB"
                                         input="input_toupper" next-node-id="sub_return"
                                         op-type="call" operation-name="toupper_call"
                                         output="output_toupper" point-x="200"
                                         point-y="150" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="sub_return"
                                   op-type="end" output="output_toupper" point-x="700"
                                   point-y="50" type="flow-node"/>
                    </SubFlow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="IDENTITY_COND"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" out-check-type="sys-svc-id" type="operation"
                           class="it.greenvulcano.gvesb.core.flow.GVFlowWF">
                    <Description>VulCon generated Operation</Description>
                    <Conditions>
                        <IdentityCondition condition="check-ROLE_A" type="condition"
                                           class="it.greenvulcano.gvesb.identity.condition.IdentityCondition">
                            <ACL>
                                <RoleRef name="ROLE_A"/>
                            </ACL>
                        </IdentityCondition>
                        <IdentityCondition condition="check-ROLE_B" type="condition"
                                           class="it.greenvulcano.gvesb.identity.condition.IdentityCondition">
                            <ACL>
                                <RoleRef name="ROLE_B"/>
                            </ACL>
                        </IdentityCondition>
                    </Conditions>
                    <Participant id-channel="TEST_CHANNEL" id-system="GVESB" />
                    <Flow first-node="check_roles" point-x="50" point-y="150">
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="call_Echo" id="check_roles"
                                     input="request" on-exception-id="return_error"
                                     op-type="check" point-x="350" point-y="150" type="flow-node">
                            <GVRouting next-node-id="call_TU" condition="check-ROLE_A"/>
                            <GVRouting next-node-id="call_TL" condition="check-ROLE_B"/>
                        </GVNodeCheck>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode" id="call_TU" id-system="GVESB"
                                         input="request" next-node-id="return" op-type="call" operation-name="toupper_call"
                                         output="response" type="flow-node" />
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode" id="call_TL" id-system="GVESB"
                                         input="request" next-node-id="return" op-type="call" operation-name="tolower_call"
                                         output="response" type="flow-node" />
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode" id="call_Echo" id-system="GVESB"
                                         input="request" next-node-id="return" op-type="call" operation-name="echo_call"
                                         output="response" type="flow-node" />
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode" id="return" op-type="end" output="response"
                                   point-x="700" point-y="50" type="flow-node" end-business-process="yes"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode" id="return_error" op-type="end" output="request"
                                   point-x="700" point-y="250" type="flow-node" end-business-process="yes"/>
                    </Flow>
                </Operation>
            </Service>

            <Service group-name="DEFAULT_GRP" id-service="TEST_EJB_GVB"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Description>Return the input string in uppercase</Description>
                    <Participant id-channel="TEST_CHANNEL" id-system="GVESB"/>
                    <Flow first-node="request" point-x="50" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="request" id-system="GVESB"
                                         input="input_ejbToupperGVBuffer"
                                         next-node-id="check_status" op-type="call"
                                         operation-name="ejbToupperGVBuffer"
                                         output="output_ejbToupperGVBuffer" point-x="200"
                                         point-y="150" type="flow-node"/>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="return_status" id="check_status"
                                     input="output_ejbToupperGVBuffer"
                                     on-exception-id="return_error" op-type="check"
                                     point-x="350" point-y="150" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="return_status" op-type="end"
                                   output="output_ejbToupperGVBuffer" point-x="700"
                                   point-y="50" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="return_error" op-type="end"
                                   output="output_ejbToupperGVBuffer" point-x="700"
                                   point-y="250" type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="TEST_EJB_STR"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Description>Return the input comma separated strings in uppercase</Description>
                    <Participant id-channel="TEST_CHANNEL" id-system="GVESB"/>
                    <Flow first-node="request" point-x="50" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="request" id-system="GVESB"
                                         input="input_ejbToupperStringArr"
                                         next-node-id="check_status" op-type="call"
                                         operation-name="ejbToupperStringArr"
                                         output="output_ejbToupperStringArr" point-x="200"
                                         point-y="150" type="flow-node"/>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="return_status" id="check_status"
                                     input="output_ejbToupperStringArr"
                                     on-exception-id="return_error" op-type="check"
                                     point-x="350" point-y="150" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="return_status" op-type="end"
                                   output="output_ejbToupperStringArr" point-x="700"
                                   point-y="50" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="return_error" op-type="end"
                                   output="output_ejbToupperStringArr" point-x="700"
                                   point-y="250" type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="TEST_EJB_SUM"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Description>Return the property SUM as the sum of I1 and I2 input properties</Description>
                    <Participant id-channel="TEST_CHANNEL" id-system="GVESB"/>
                    <Flow first-node="request" point-x="50" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="request" id-system="GVESB"
                                         input="input_ejbSumInt"
                                         next-node-id="check_status" op-type="call"
                                         operation-name="ejbSumInt"
                                         output="output_ejbSumInt" point-x="200"
                                         point-y="150" type="flow-node"/>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="return_status" id="check_status"
                                     input="output_ejbSumInt"
                                     on-exception-id="return_error" op-type="check"
                                     point-x="350" point-y="150" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="return_status" op-type="end"
                                   output="output_ejbSumInt" point-x="700" point-y="50"
                                   type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="return_error" op-type="end"
                                   output="output_ejbSumInt" point-x="700" point-y="250"
                                   type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="TEST_EJB_ADD_TIME"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Description>Return the property DATE_OUT as the value of the property DATE (in the format &quot;dd/MM/yyyy HH:mm:ss) plus the property DELTA minutes</Description>
                    <Participant id-channel="TEST_CHANNEL" id-system="GVESB"/>
                    <Flow first-node="request" point-x="50" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="request" id-system="GVESB"
                                         input="input_ejbAddTime"
                                         next-node-id="check_status" op-type="call"
                                         operation-name="ejbAddTime"
                                         output="output_ejbAddTime" point-x="200"
                                         point-y="150" type="flow-node"/>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="return_status" id="check_status"
                                     input="output_ejbAddTime"
                                     on-exception-id="return_error" op-type="check"
                                     point-x="350" point-y="150" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="return_status" op-type="end"
                                   output="output_ejbAddTime" point-x="700" point-y="50"
                                   type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="return_error" op-type="end"
                                   output="output_ejbAddTime" point-x="700" point-y="250"
                                   type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>

            <Service group-name="DEFAULT_GRP" id-service="TestHL7" service-activation="on"
                     statistics="off">
                <Operation name="RequestReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Participant id-channel="TEST_CHANNEL_HL7" id-system="GVESB"/>
                    <Flow first-node="process" point-x="20" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="process"
                                         id-system="GVESB" input="input"
                                         next-node-id="end" op-type="call"
                                         operation-name="echo_call" output="output"
                                         point-x="127" point-y="139" type="flow-node">
                            <InputServices>
                                <gvdte-service critical="yes" internal="yes"
                                               remove-fields="yes" type="service">
                                    <map-name-param name="map-name" type="param"
                                                    value="TestHL72XML"/>
                                    <gvdte-context-call class="it.greenvulcano.gvesb.virtual.internal.DTEServiceContextCall"
                                                        name="TestHL72XML" type="call"/>
                                </gvdte-service>
                            </InputServices>
                            <OutputServices>
                                <gvdte-service critical="yes" internal="yes"
                                               remove-fields="yes" type="service">
                                    <map-name-param name="map-name" type="param"
                                                    value="TestXML2HL7"/>
                                    <gvdte-context-call class="it.greenvulcano.gvesb.virtual.internal.DTEServiceContextCall"
                                                        name="TestXML2HL7" type="call"/>
                                </gvdte-service>
                            </OutputServices>
                        </GVOperationNode>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="output" point-x="256" point-y="138"
                                   type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="TestHL7_Listener"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Participant id-channel="TEST_CHANNEL_HL7" id-system="GVESB"/>
                    <Flow first-node="process" point-x="20" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="process"
                                         id-system="GVESB" input="input"
                                         next-node-id="end" op-type="call"
                                         operation-name="echo_call" output="output"
                                         point-x="127" point-y="139" type="flow-node">
                            <OutputServices>
                                <gvdte-service critical="yes" internal="yes"
                                               remove-fields="yes" type="service">
                                    <map-name-param name="map-name" type="param"
                                                    value="TestHL7_OK"/>
                                    <gvdte-context-call class="it.greenvulcano.gvesb.virtual.internal.DTEServiceContextCall"
                                                        name="TestHL7_OK" type="call"/>
                                </gvdte-service>
                            </OutputServices>
                        </GVOperationNode>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="output" point-x="256" point-y="138"
                                   type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="TestHL7_Client"
                     service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           out-check-type="sys-svc-id" type="operation">
                    <Participant id-channel="TEST_CHANNEL_HL7" id-system="GVESB"/>
                    <Flow first-node="process" point-x="20" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         dump-in-out="false" id="process"
                                         id-system="GVESB" input="input"
                                         next-node-id="end" op-type="call"
                                         operation-name="hl7_call" output="output"
                                         point-x="127" point-y="139" type="flow-node">
                            <InputServices>
                                <gvdte-service critical="yes" internal="yes"
                                               remove-fields="yes" type="service">
                                    <map-name-param name="map-name" type="param"
                                                    value="TestHL72XML"/>
                                    <gvdte-context-call class="it.greenvulcano.gvesb.virtual.internal.DTEServiceContextCall"
                                                        name="TestHL72XML" type="call"/>
                                </gvdte-service>
                            </InputServices>
                            <OutputServices>
                                <gvdte-service critical="yes" internal="yes"
                                               remove-fields="yes" type="service">
                                    <map-name-param name="map-name" type="param"
                                                    value="TestXML2HL7"/>
                                    <gvdte-context-call class="it.greenvulcano.gvesb.virtual.internal.DTEServiceContextCall"
                                                        name="TestXML2HL7" type="call"/>
                                </gvdte-service>
                            </OutputServices>
                        </GVOperationNode>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   end-business-process="yes" id="end" op-type="end"
                                   output="output" point-x="256" point-y="138"
                                   type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>

            <Service group-name="DEFAULT_GRP" id-service="FigureFilter"
                     service-activation="on" statistics="off">
                <Operation class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           name="RequestReply" operation-activation="on"
                           out-check-type="sys-svc-id" type="operation">
                    <Participant id-channel="TEST_CHANNEL_RULES" id-system="GVESB"/>
                    <Flow first-node="loadObjects" point-x="50" point-y="150">
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            id="loadObjects" input="input"
                                            next-node-id="request"
                                            op-type="change GVBuffer" output="input"
                                            point-x="146" point-y="147" type="flow-node">
                            <ChangeGVBuffer clear-data="false" scope-name="gvesb">
                                <Script>var fb = new FigureBag();
fb.add(new Triangle(&quot;red&quot;));
fb.add(new Triangle(&quot;green&quot;));
fb.add(new Square(&quot;red&quot;));
fb.add(new Circle(&quot;yellow&quot;));
fb.add(new Circle(&quot;green&quot;));

data.setObject(fb);</Script>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="request" id-system="GVESB" input="input"
                                         next-node-id="check_status" op-type="call"
                                         operation-name="figureFilter" output="output"
                                         point-x="282" point-y="148" type="flow-node"/>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="return_status" id="check_status"
                                     input="output" on-exception-id="return_error"
                                     op-type="check" point-x="402" point-y="147"
                                     type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="return_status" op-type="end" output="output"
                                   point-x="700" point-y="50" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="return_error" op-type="end" output="output"
                                   point-x="700" point-y="250" type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="FigureFilterOut"
                     service-activation="on" statistics="off">
                <Operation class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           name="RequestReply" operation-activation="on"
                           out-check-type="sys-svc-id" type="operation">
                    <Participant id-channel="TEST_CHANNEL_RULES" id-system="GVESB"/>
                    <Flow first-node="loadObjects" point-x="50" point-y="150">
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            id="loadObjects" input="input"
                                            next-node-id="request"
                                            op-type="change GVBuffer" output="input"
                                            point-x="146" point-y="147" type="flow-node">
                            <ChangeGVBuffer clear-data="false" scope-name="gvesb">
                                <Script>var fb = new FigureBag();
fb.add(new Triangle(&quot;red&quot;));
fb.add(new Triangle(&quot;green&quot;));
fb.add(new Square(&quot;red&quot;));
fb.add(new Circle(&quot;yellow&quot;));
fb.add(new Circle(&quot;green&quot;));

data.setObject(fb);</Script>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="request" id-system="GVESB" input="input"
                                         next-node-id="check_status" op-type="call"
                                         operation-name="figureFilterOut" output="output"
                                         point-x="282" point-y="148" type="flow-node"/>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="return_status" id="check_status"
                                     input="output" on-exception-id="return_error"
                                     op-type="check" point-x="402" point-y="147"
                                     type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="return_status" op-type="end" output="output"
                                   point-x="700" point-y="50" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="return_error" op-type="end" output="output"
                                   point-x="700" point-y="250" type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>
            <Service group-name="DEFAULT_GRP" id-service="FigureFilterOutColl"
                     service-activation="on" statistics="off">
                <Operation class="it.greenvulcano.gvesb.core.flow.GVFlowWF"
                           name="RequestReply" operation-activation="on"
                           out-check-type="sys-svc-id" type="operation">
                    <Participant id-channel="TEST_CHANNEL_RULES" id-system="GVESB"/>
                    <Flow first-node="loadObjects" point-x="50" point-y="150">
                        <ChangeGVBufferNode class="it.greenvulcano.gvesb.core.flow.ChangeGVBufferNode"
                                            id="loadObjects" input="input"
                                            next-node-id="request"
                                            op-type="change GVBuffer" output="input"
                                            point-x="146" point-y="147" type="flow-node">
                            <ChangeGVBuffer clear-data="false" scope-name="gvesb">
                                <Script>var fb = new FigureBag();
fb.add(new Triangle(&quot;red&quot;));
fb.add(new Triangle(&quot;green&quot;));
fb.add(new Square(&quot;red&quot;));
fb.add(new Circle(&quot;yellow&quot;));
fb.add(new Circle(&quot;green&quot;));

data.setObject(fb);</Script>
                            </ChangeGVBuffer>
                        </ChangeGVBufferNode>
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                         id="request" id-system="GVESB" input="input"
                                         next-node-id="check_status" op-type="call"
                                         operation-name="figureFilterOutColl" output="output"
                                         point-x="282" point-y="148" type="flow-node"/>
                        <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck"
                                     default-id="return_status" id="check_status"
                                     input="output" on-exception-id="return_error"
                                     op-type="check" point-x="402" point-y="147"
                                     type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="return_status" op-type="end" output="output"
                                   point-x="700" point-y="50" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                   id="return_error" op-type="end" output="output"
                                   point-x="700" point-y="250" type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>

            <Service group-name="DEFAULT_GRP" id-service="TWEET"
                    service-activation="on" statistics="off">
                <Operation name="RequestReply" operation-activation="on" out-check-type="sys-svc-id"
                        type="operation" class="it.greenvulcano.gvesb.core.flow.GVFlowWF">
                    <Participant id-channel="TEST_CHANNEL_TWEET" id-system="GVESB"/>
                    <Flow first-node="update_status" point-x="20" point-y="150">
                        <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode"
                                        id="update_status" id-system="GVESB" input="input"
                                        next-node-id="end" op-type="call"
                                        operation-name="tweet" output="output"
                                        point-x="186" point-y="152" type="flow-node"/>
                        <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode"
                                end-business-process="yes" id="end" op-type="end"
                                output="output" point-x="386" point-y="150"
                                type="flow-node"/>
                    </Flow>
                </Operation>
            </Service>

            <Service group-name="DEFAULT_GRP" id-service="callOde"
                     service-activation="on" statistics="off">
                <BpelOperation name="RequestReply" operation-activation="on" out-check-type="sys-svc-id"
                               type="operation" class="it.greenvulcano.gvesb.core.bpel.GVFlowODE">
                    <BpelFlow processname="HelloWorld" namespace="http://helloWorld"/>
                </BpelOperation>
            </Service>
        </Services>
    </GVServices>
    <GVSystems name="SYSTEMS" type="module">
        <Systems>
            <Description>This section contains a list of all systems connected to GreenVulcano ESB</Description>
            <System id-system="GVESB_WS" system-activation="on">
                <Channel id-channel="TEST_CHANNEL_WS">
                    <ws-call class="it.greenvulcano.gvesb.virtual.ws.WSCallOperation"
                             name="toupper_WSS" type="call">
                        <AxisWebServiceInvoker class="it.greenvulcano.gvesb.virtual.ws.GVWebServiceInvoker"
                                               operation="toupper"
                                               portName="TOUPPER_WSS_Soap"
                                               ref-dp="reqToupperWSDataProvider"
                                               returnType="body-element"
                                               service="TOUPPER_WSS"
                                               serviceNS="http://www.greenvulcano.it/greenvulcano"
                                               type="invoker">
                            <WSDLInfo type="wsdlinfo"
                                      wsdl="file://${{gv.app.home}}/xmlconfig/wsdl/TOUPPER_WSS.wsdl"/>
                            <EngageModule name="rampart" specification="WS-Security"
                                          type="it.greenvulcano.gvesb.virtual.ws.module.rampart.RampartModuleHandler">
                                <PolicyData policy_key="rampartPolicy">&lt;wsp:Policy wsu:Id=&quot;SigEncr&quot;
                                                xmlns:wsp=&quot;http://schemas.xmlsoap.org/ws/2004/09/policy&quot;
                                                xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;
                                        &lt;wsp:ExactlyOne&gt;
                                            &lt;wsp:All&gt;
                                                &lt;sp:AsymmetricBinding xmlns:sp=&quot;http://schemas.xmlsoap.org/ws/2005/07/securitypolicy&quot;&gt;
                                                    &lt;wsp:Policy&gt;
                                                        &lt;sp:InitiatorToken&gt;
                                                            &lt;wsp:Policy&gt;
                                                                &lt;sp:X509Token sp:IncludeToken=&quot;http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient&quot;&gt;
                                                                    &lt;wsp:Policy&gt;
                                                                        &lt;sp:RequireThumbprintReference/&gt;
                                                                        &lt;sp:WssX509V3Token10/&gt;
                                                                    &lt;/wsp:Policy&gt;
                                                                &lt;/sp:X509Token&gt;
                                                            &lt;/wsp:Policy&gt;
                                                        &lt;/sp:InitiatorToken&gt;
                                                        &lt;sp:RecipientToken&gt;
                                                            &lt;wsp:Policy&gt;
                                                                &lt;sp:X509Token sp:IncludeToken=&quot;http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/Never&quot;&gt;
                                                                    &lt;wsp:Policy&gt;
                                                                        &lt;sp:RequireThumbprintReference/&gt;
                                                                        &lt;sp:WssX509V3Token10/&gt;
                                                                    &lt;/wsp:Policy&gt;
                                                                &lt;/sp:X509Token&gt;
                                                            &lt;/wsp:Policy&gt;
                                                        &lt;/sp:RecipientToken&gt;
                                                        &lt;sp:AlgorithmSuite&gt;
                                                            &lt;wsp:Policy&gt;
                                                                &lt;sp:TripleDesRsa15/&gt;
                                                            &lt;/wsp:Policy&gt;
                                                        &lt;/sp:AlgorithmSuite&gt;
                                                        &lt;sp:Layout&gt;
                                                            &lt;wsp:Policy&gt;
                                                                &lt;sp:Strict/&gt;
                                                            &lt;/wsp:Policy&gt;
                                                        &lt;/sp:Layout&gt;
                                                        &lt;sp:IncludeTimestamp/&gt;
                                                        &lt;sp:OnlySignEntireHeadersAndBody/&gt;
                                                    &lt;/wsp:Policy&gt;
                                                &lt;/sp:AsymmetricBinding&gt;
                                                &lt;sp:Wss10 xmlns:sp=&quot;http://schemas.xmlsoap.org/ws/2005/07/securitypolicy&quot;&gt;
                                                    &lt;wsp:Policy&gt;
                                                        &lt;sp:MustSupportRefKeyIdentifier/&gt;
                                                        &lt;sp:MustSupportRefIssuerSerial/&gt;
                                                    &lt;/wsp:Policy&gt;
                                                &lt;/sp:Wss10&gt;
                                                &lt;sp:SignedParts xmlns:sp=&quot;http://schemas.xmlsoap.org/ws/2005/07/securitypolicy&quot;&gt;
                                                    &lt;sp:Body/&gt;
                                                &lt;/sp:SignedParts&gt;
                                                &lt;sp:EncryptedParts xmlns:sp=&quot;http://schemas.xmlsoap.org/ws/2005/07/securitypolicy&quot;&gt;
                                                    &lt;sp:Body/&gt;
                                                &lt;/sp:EncryptedParts&gt;
                                                &lt;ramp:RampartConfig xmlns:ramp=&quot;http://ws.apache.org/rampart/policy&quot;&gt;
                                                    &lt;ramp:user&gt;client&lt;/ramp:user&gt;
                                                    &lt;ramp:encryptionUser&gt;service&lt;/ramp:encryptionUser&gt;
                                                    &lt;ramp:passwordCallbackClass&gt;it.greenvulcano.gvesb.ws.rampart.policy.pwcb.PwCbBasicHandler&lt;/ramp:passwordCallbackClass&gt;
                                                    &lt;ramp:signatureCrypto&gt;
                                                        &lt;ramp:crypto provider=&quot;it.greenvulcano.gvesb.ws.rampart.policy.CryptoAdapter&quot;&gt;
                                                            &lt;ramp:property name=&quot;it.greenvulcano.wss.crypto.keystore.id&quot;&gt;WSS_client&lt;/ramp:property&gt;
                                                        &lt;/ramp:crypto&gt;
                                                    &lt;/ramp:signatureCrypto&gt;
                                                    &lt;ramp:encryptionCypto&gt;
                                                        &lt;ramp:crypto provider=&quot;it.greenvulcano.gvesb.ws.rampart.policy.CryptoAdapter&quot;&gt;
                                                            &lt;ramp:property name=&quot;it.greenvulcano.wss.crypto.keystore.id&quot;&gt;WSS_client&lt;/ramp:property&gt;
                                                        &lt;/ramp:crypto&gt;
                                                    &lt;/ramp:encryptionCypto&gt;
                                                &lt;/ramp:RampartConfig&gt;
                                            &lt;/wsp:All&gt;
                                        &lt;/wsp:ExactlyOne&gt;
                                    &lt;/wsp:Policy&gt;</PolicyData>
                            </EngageModule>
                        </AxisWebServiceInvoker>
                    </ws-call>
                </Channel>
            </System>
            <System id-system="GVESB" system-activation="on">
                <Channel id-channel="TEST_CHANNEL">
                    <fsmonitor-call class="it.greenvulcano.gvesb.virtual.file.reader.AnalyzeDirCall"
                                    name="dirScan" type="call">
                        <LocalFileSystemMonitor class="it.greenvulcano.util.file.monitor.LocalFileSystemMonitor"
                                                path="${{java.io.tmpdir}}/TESTFS/TestSearch"
                                                type="fs-monitor">
                            <FileMonitorStatus class="it.greenvulcano.util.file.monitor.status.FileMonitorStatus"
                                               errorOnInvalidFile="true"
                                               statusFilePath="${{java.io.tmpdir}}/TESTFS/dirScan.state"
                                               type="fs-monitor-status"/>
                            <FileFilter file-mask="[\w].*" file-type="all"/>
                            <ResultFilter created="true" deleted="true" existing="true"
                                          modified="true" sort-ascending="false"
                                          sort-mode="by-time"/>
                        </LocalFileSystemMonitor>
                    </fsmonitor-call>
                    <test-service-call class="it.greenvulcano.gvesb.virtual.internal.TestServiceCall"
                                       name="toupper_call" service="toupper"
                                       sleep-on-init="75" sleep-on-perform="50"
                                       type="call"/>
                    <test-service-call class="it.greenvulcano.gvesb.virtual.internal.TestServiceCall"
                                       name="tolower_call" service="tolower"
                                       sleep-on-init="75" sleep-on-perform="50"
                                       type="call"/>
                    <test-service-call class="it.greenvulcano.gvesb.virtual.internal.TestServiceCall"
                                       name="echo_call" service="echo" sleep-on-init="75"
                                       sleep-on-perform="50" type="call"/>
                    <birt-report-call class="it.greenvulcano.gvesb.virtual.birt.report.BIRTReportCallOperation"
                                      groupName="TestGRP" name="TestBirt"
                                      reportName="Sales Invoice" reportType="excel"
                                      type="call"/>
                    <filewriter-call class="it.greenvulcano.gvesb.virtual.file.writer.FileWriter"
                                     fileName="Report.decode{{ognl{{property[&apos;BIRT_REPORT_TYPE&apos;]}}::excel::xls::ognl{{property[&apos;BIRT_REPORT_TYPE&apos;]}}}}"
                                     name="WriteReportFile"
                                     targetPath="${{gv.app.home}}/log" type="call"/>
                    <dh-call class="it.greenvulcano.gvesb.virtual.datahandler.DataHandlerCallOperation"
                             name="TestInsertXML" type="call">
                        <DBOBuilder class="it.greenvulcano.gvesb.datahandling.dbobuilder.DBOBuilder"
                                    isXA="false" jdbc-connection-name="gv_test"
                                    name="TestInsertXML" transacted="true"
                                    type="dbobuilder">
                            <DBOCallSP class="it.greenvulcano.gvesb.datahandling.dbo.DBOCallSP"
                                       name="InsertXML" transformation="InsertXML"
                                       type="dbo">
                                <CallDescriptor>
                                    <statement id="0" type="callsp">call load_xml_file(?, ?, ?)</statement>
                                    <SPOutputParameters>
                                        <SPOutputParameter db-type="number"
                                                           java-type="string" position="3"
                                                           prop-name="RESULT"
                                                           return-in-prop="false"/>
                                    </SPOutputParameters>
                                </CallDescriptor>
                            </DBOCallSP>
                        </DBOBuilder>
                    </dh-call>
                    <j2ee-ejb-call class="it.greenvulcano.gvesb.virtual.j2ee.J2EECallOperation"
                                   name="ejbToupperGVBuffer" remote-or-local-interface="test.unit.ejb.J2EETest"
                                   version="2" home-interface="test.unit.ejb.J2EETestHome" jndi-name="gvesb/test/Test"
                                   method="toupper" parameterTypes="it.greenvulcano.gvesb.buffer.GVBuffer" type="call"/>
                    <j2ee-ejb-call class="it.greenvulcano.gvesb.virtual.j2ee.J2EECallOperation"
                                   name="ejbToupperStringArr" remote-or-local-interface="test.unit.ejb.J2EETest"
                                   version="2" home-interface="test.unit.ejb.J2EETestHome" jndi-name="gvesb/test/Test"
                                   method="toupper" parameterTypes="java.lang.String[]" type="call"
                                   input-ref-dp="toupperInArrayDataProvider" output-ref-dp="toupperOutGVBChangeDataProvider"/>
                    <j2ee-ejb-call class="it.greenvulcano.gvesb.virtual.j2ee.J2EECallOperation"
                                   name="ejbSumInt" remote-or-local-interface="test.unit.ejb3.J2EETest"
                                   version="3" jndi-name="gvesb/test3/Test"
                                   method="sum" parameterTypes="int,int" type="call"
                                   input-ref-dp="sumInArrayDataProvider" output-ref-dp="sumOutGVBChangeDataProvider"/>
                    <j2ee-ejb-call class="it.greenvulcano.gvesb.virtual.j2ee.J2EECallOperation"
                                   name="ejbAddTime" remote-or-local-interface="test.unit.ejb3.J2EETest"
                                   version="3" jndi-name="gvesb/test3/Test"
                                   method="addTime" parameterTypes="java.util.Date,int,int" type="call"
                                   input-ref-dp="addTimeInArrayDataProvider" output-ref-dp="addTimeOutGVBChangeDataProvider"/>
                </Channel>
                <Channel id-channel="TEST_CHANNEL_A">
                    <test-service-call class="it.greenvulcano.gvesb.virtual.internal.TestServiceCall"
                                       name="toupper_call" service="toupper" type="call"/>
                    <test-service-call class="it.greenvulcano.gvesb.virtual.internal.TestServiceCall"
                                       name="tolower_call" service="tolower" type="call"/>
                    <jms-enqueue acknowledge-type="auto-acknowledge"
                                 class="it.greenvulcano.gvesb.virtual.j2ee.JMSEnqueueOperation"
                                 connection-factory="java:/XAConnectionFactory"
                                 delivery-mode="persistent"
                                 destination-name="gvesb/jms/queue/TOUPPER_A_Request_Queue"
                                 destination-type="queue" dump-message="true"
                                 name="JMSEnqueueTo::TOUPPER_A_Req" priority="4"
                                 ref-dp="WriteString_JMSBytesMessageDataProvider"
                                 transacted="false" type="enqueue">
                        <XAHelper auto-enlist="false" transaction-status="TMSUCCESS"/>
                    </jms-enqueue>
                    <jms-enqueue acknowledge-type="auto-acknowledge"
                                 class="it.greenvulcano.gvesb.virtual.j2ee.JMSEnqueueOperation"
                                 connection-factory="java:/XAConnectionFactory"
                                 delivery-mode="persistent"
                                 destination-name="gvesb/jms/queue/TOUPPER_A_Response_Queue"
                                 destination-type="queue" dump-message="true"
                                 name="JMSEnqueueTo::TOUPPER_A_Resp" priority="4"
                                 ref-dp="WriteString_JMSBytesMessageDataProvider"
                                 transacted="false" type="enqueue">
                        <XAHelper auto-enlist="false" transaction-status="TMSUCCESS"/>
                    </jms-enqueue>
                    <jms-dequeue acknowledge-type="auto-acknowledge"
                                 class="it.greenvulcano.gvesb.virtual.j2ee.JMSDequeueOperation"
                                 connection-factory="java:/XAConnectionFactory"
                                 destination-name="gvesb/jms/queue/TOUPPER_A_Response_Queue"
                                 destination-type="queue" dump-message="true"
                                 name="JMSDequeueFrom::TOUPPER_A_Resp"
                                 receive-timeout="10000"
                                 receive-timeout-overridable="false"
                                 receive-type="timeout"
                                 ref-dp="ReadString_JMSBytesMessageDataProvider"
                                 transacted="false" type="dequeue">
                        <XAHelper auto-enlist="false" transaction-status="TMSUCCESS"/>
                    </jms-dequeue>
                </Channel>
                <Channel id-channel="TEST_CHANNEL_FILE">
                    <filemanager-call class="it.greenvulcano.gvesb.virtual.file.FileManagerCall"
                                      name="ScanAttachments" type="call">
                        <FileCommands>
                            <FileSearchCommand class="it.greenvulcano.gvesb.virtual.file.command.GVSearch"
                                               filePattern=".*" returnFullPath="true"
                                               sourcePath="${{gv.app.home}}/TEST/TESTFS/TestAttach/input"
                                               type="file-command"/>
                        </FileCommands>
                    </filemanager-call>
                    <filemanager-call class="it.greenvulcano.gvesb.virtual.file.FileManagerCall"
                                      name="MoveAttachments" type="call">
                        <FileCommands>
                            <FileMoveCommand class="it.greenvulcano.gvesb.virtual.file.command.GVMove"
                                             filePattern=".*"
                                             sourcePath="${{gv.app.home}}/TEST/TESTFS/TestAttach/input"
                                             targetPath="${{gv.app.home}}/TEST/TESTFS/TestAttach/sent"
                                             type="file-command"/>
                        </FileCommands>
                    </filemanager-call>
                    <smtp-call class="it.greenvulcano.gvesb.virtual.smtp.SMTPCallOperation"
                               jndi-name="gvesb.mailServer" name="SendEmail" type="call">
                        <mail-message content-type="text-html" high-priority="true"
                                      sender-display-name="GV ESB"
                                      subject="Test send attachments">
                            <destinations>
                                <to>
                                    <mail-address address="gv2@gv.com"/>
                                </to>
                            </destinations>
                            <message-body gvBuffer-dump="false">
                                <message-text>Attachment file list:
@{{GV_SMTP_ATTACHMENTS}}</message-text>
                            </message-body>
                        </mail-message>
                    </smtp-call>
                    <fsmonitor-call class="it.greenvulcano.gvesb.virtual.file.reader.AnalyzeDirCall"
                                    name="ScanXMLFiles" type="call">
                        <LocalFileSystemMonitor class="it.greenvulcano.util.file.monitor.LocalFileSystemMonitor"
                                                path="${{gv.app.home}}/TEST/TESTFS/TestXML/input"
                                                type="fs-monitor">
                            <InMemoryMonitorStatus class="it.greenvulcano.util.file.monitor.status.InMemoryMonitorStatus"
                                                   dumpStatus="false"
                                                   type="fs-monitor-status"/>
                            <FileFilter file-mask=".*\.xml" file-type="files-only"/>
                            <ResultFilter created="false" deleted="false" existing="true"
                                          modified="false" sort-ascending="true"
                                          sort-mode="by-name"/>
                        </LocalFileSystemMonitor>
                    </fsmonitor-call>
                    <filereader-call class="it.greenvulcano.gvesb.virtual.file.reader.FileReader"
                                     fileName="ognl{{property[&apos;FILE_NAME&apos;]}}"
                                     name="ReadFile"
                                     srcPath="${{gv.app.home}}/TEST/TESTFS/TestXML/input"
                                     type="call"/>
                    <filewriter-call class="it.greenvulcano.gvesb.virtual.file.writer.FileWriter"
                                     fileName="ognl{{property[&apos;FILE_NAME&apos;]}}.result"
                                     name="WriteStatusFile"
                                     targetPath="${{gv.app.home}}/TEST/TESTFS/TestXML/discarded"
                                     type="call"/>
                    <filemanager-call class="it.greenvulcano.gvesb.virtual.file.FileManagerCall"
                                      name="MoveFile" type="call">
                        <FileCommands>
                            <FileMoveCommand class="it.greenvulcano.gvesb.virtual.file.command.GVMove"
                                             filePattern="ognl{{property[&apos;FILE_NAME&apos;]}}"
                                             isCritical="true"
                                             sourcePath="${{gv.app.home}}/TEST/TESTFS/TestXML/input"
                                             targetPath="${{gv.app.home}}/TEST/TESTFS/TestXML/ognl{{property[&apos;TARGET&apos;]}}"
                                             type="file-command"/>
                        </FileCommands>
                    </filemanager-call>
                    <filemanager-call class="it.greenvulcano.gvesb.virtual.file.FileManagerCall"
                                      name="ResetXMLFiles" type="call">
                        <FileCommands>
                            <FileMoveCommand class="it.greenvulcano.gvesb.virtual.file.command.GVMove"
                                             filePattern=".*\.xml" isCritical="false"
                                             sourcePath="${{gv.app.home}}/TEST/TESTFS/TestXML/validated"
                                             targetPath="${{gv.app.home}}/TEST/TESTFS/TestXML/input"
                                             type="file-command"/>
                            <FileMoveCommand class="it.greenvulcano.gvesb.virtual.file.command.GVMove"
                                             filePattern=".*\.xml" isCritical="false"
                                             sourcePath="${{gv.app.home}}/TEST/TESTFS/TestXML/discarded"
                                             targetPath="${{gv.app.home}}/TEST/TESTFS/TestXML/input"
                                             type="file-command"/>
                            <FileDeleteCommand class="it.greenvulcano.gvesb.virtual.file.command.GVDelete"
                                               filePattern=".*" isCritical="false"
                                               targetPath="${{gv.app.home}}/TEST/TESTFS/TestXML/discarded"
                                               type="file-command"/>
                        </FileCommands>
                    </filemanager-call>
                </Channel>
                <Channel id-channel="TEST_CHANNEL_REMOTE_FILE">
                    <fsmonitor-call class="it.greenvulcano.gvesb.virtual.file.reader.AnalyzeDirCall"
                                    name="ScanXMLFiles" type="call">
                        <RemoteFileSystemMonitor class="it.greenvulcano.util.file.monitor.RemoteFileSystemMonitor"
                                                 path="/home/test_user/TestXML/input"
                                                 type="fs-monitor">
                            <InMemoryMonitorStatus class="it.greenvulcano.util.file.monitor.status.InMemoryMonitorStatus"
                                                   dumpStatus="false"
                                                   type="fs-monitor-status"/>
                            <FileFilter file-mask=".*\.xml" file-type="files-only"/>
                            <ResultFilter created="false" deleted="false" existing="true"
                                          modified="false" sort-ascending="true"
                                          sort-mode="by-name"/>
                            <FTPManager autoConnect="false"
                                        class="it.greenvulcano.util.remotefs.ftp.FTPManager"
                                        hostType="UNIX" hostname="localhost"
                                        password="{3DES}pl1YKFjWlqMfdTIbxY17Mg=="
                                        port="3021" type="remote-manager"
                                        username="test_user"/>
                        </RemoteFileSystemMonitor>
                    </fsmonitor-call>
                    <remotemanager-call class="it.greenvulcano.gvesb.virtual.file.remote.RemoteManagerCall"
                                        name="ReadFile" type="call">
                        <FTPManager autoConnect="false"
                                    class="it.greenvulcano.util.remotefs.ftp.FTPManager"
                                    hostType="UNIX" hostname="localhost"
                                    password="{3DES}pl1YKFjWlqMfdTIbxY17Mg==" port="3021"
                                    type="remote-manager" username="test_user"/>
                        <RemoteCommands>
                            <RemoteDownloadCommand class="it.greenvulcano.gvesb.virtual.file.remote.command.GVDownload"
                                                   isCritical="true"
                                                   remoteFilePattern="ognl{{property[&apos;FILE_NAME&apos;]}}"
                                                   remotePath="/home/test_user/TestXML/input"
                                                   toGVBufferExpression="setObject(new java.lang.String(#input))"
                                                   type="remote-command"/>
                        </RemoteCommands>
                    </remotemanager-call>
                    <remotemanager-call class="it.greenvulcano.gvesb.virtual.file.remote.RemoteManagerCall"
                                        name="WriteStatusFile" type="call">
                        <FTPManager autoConnect="false"
                                    class="it.greenvulcano.util.remotefs.ftp.FTPManager"
                                    hostType="UNIX" hostname="localhost"
                                    password="{3DES}pl1YKFjWlqMfdTIbxY17Mg==" port="3021"
                                    type="remote-manager" username="test_user"/>
                        <RemoteCommands>
                            <RemoteUploadCommand class="it.greenvulcano.gvesb.virtual.file.remote.command.GVUpload"
                                                 fromGVBufferExpression="getObject().getBytes()"
                                                 isCritical="true"
                                                 remotePath="/home/test_user/TestXML/discarded"
                                                 sourceFilePattern="ognl{{property[&apos;FILE_NAME&apos;]}}.result"
                                                 type="remote-command"/>
                        </RemoteCommands>
                    </remotemanager-call>
                    <remotemanager-call class="it.greenvulcano.gvesb.virtual.file.remote.RemoteManagerCall"
                                        name="MoveFile" type="call">
                        <FTPManager autoConnect="false"
                                    class="it.greenvulcano.util.remotefs.ftp.FTPManager"
                                    hostType="UNIX" hostname="localhost"
                                    password="{3DES}pl1YKFjWlqMfdTIbxY17Mg==" port="3021"
                                    type="remote-manager" username="test_user"/>
                        <RemoteCommands>
                            <RemoteMoveCommand class="it.greenvulcano.gvesb.virtual.file.remote.command.GVMove"
                                               isCritical="true"
                                               newName="ognl{{property[&apos;TARGET&apos;]}}/ognl{{property[&apos;FILE_NAME&apos;]}}"
                                               oldName="input/ognl{{property[&apos;FILE_NAME&apos;]}}"
                                               targetPath="/home/test_user/TestXML"
                                               type="remote-command"/>
                        </RemoteCommands>
                    </remotemanager-call>
                </Channel>

                <Channel id-channel="TEST_CHANNEL_HL7">
                    <test-service-call class="it.greenvulcano.gvesb.virtual.internal.TestServiceCall"
                                       name="echo_call" service="echo" sleep-on-init="75"
                                       sleep-on-perform="50" type="call"/>
                    <hl7-call class="it.greenvulcano.gvesb.virtual.hl7.HL7CallOperation"
                              host="localhost" name="hl7_call" port="8181" type="call"/>
                </Channel>

                <Channel id-channel="TEST_CHANNEL_RULES">
                    <rules-call class="it.greenvulcano.gvesb.gvrules.virtual.RulesCall"
                                globals-ref-dp="figFilter_GlobMapDataProvider"
                                input-ref-dp="figFilter_InMapDataProvider"
                                name="figureFilter"
                                output-ref-dp="figFilter_OutGVBChangeDataProvider"
                                ruleSet="figureFilter" type="call"/>
                    <rules-call class="it.greenvulcano.gvesb.gvrules.virtual.RulesCall"
                                globals-ref-dp="figFilterOut_GlobMapDataProvider"
                                input-ref-dp="figFilterOut_InMapDataProvider"
                                name="figureFilterOut"
                                output-ref-dp="figFilterOut_OutGVBChangeDataProvider"
                                ruleSet="figureFilterOut" type="call"/>
                    <rules-call class="it.greenvulcano.gvesb.gvrules.virtual.RulesCall"
                                globals-ref-dp="figFilterOutColl_GlobMapDataProvider"
                                input-ref-dp="figFilterOutColl_InMapDataProvider"
                                name="figureFilterOutColl"
                                output-ref-dp="figFilterOutColl_OutGVBChangeDataProvider"
                                ruleSet="figureFilterOutColl" type="call"/>
                </Channel>

                <Channel id-channel="TEST_CHANNEL_TWEET">
                    <twitter-update-status type="call" class="it.greenvulcano.gvesb.virtual.social.twitter.TwitterUpdateStatusCallOperation"
                                           name="tweet" account="[ACCOUNT_NAME]" statusText="ognl{{#object.object}}" />
                </Channel>
            </System>
            <System id-system="CREDIT" system-activation="on">
                <Channel id-channel="CHANNEL_CREDIT_MAIL">
                    <pop-call class="it.greenvulcano.gvesb.virtual.pop.POPCallOperation"
                              delete-messages="true" expunge="true"
                              jndi-name="gvesb.mailServer" name="ReceiveSVCEmail"
                              type="call"/>
                    <smtp-call class="it.greenvulcano.gvesb.virtual.smtp.SMTPCallOperation"
                               jndi-name="gvesb.mailServer" name="SendEmailSVCResponse"
                               type="call">
                        <mail-message content-type="text-plain" high-priority="false"
                                      sender-display-name="GV ESB"
                                      subject="RE: @{{SUBJECT}}">
                            <message-body gvBuffer-dump="false">
                                <message-text>Persons data</message-text>
                            </message-body>
                            <attachments>
                                <gvBuffer name="PersonsData_timestamp{{yyyyMMddHHmmss}}.@{{FILE_EXT}}"/>
                            </attachments>
                        </mail-message>
                    </smtp-call>
                    <smtp-call class="it.greenvulcano.gvesb.virtual.smtp.SMTPCallOperation"
                               jndi-name="gvesb.mailServer" name="SendEmailNoSVC"
                               type="call">
                        <mail-message content-type="text-plain" high-priority="true"
                                      sender-display-name="GV ESB"
                                      subject="RE: @{{SUBJECT}}">
                            <message-body gvBuffer-dump="false">
                                <message-text>Invalid service request.
Available Services:
SVC=LIST_EXCEL[!NAME=.....]
SVC=LIST_PDF[!NAME=.....]
SVC=LIST_BIRT[!TYPE=EXCEL or PDF(default)][!NAME=.....]</message-text>
                            </message-body>
                        </mail-message>
                    </smtp-call>
                    <excel-call class="it.greenvulcano.gvesb.virtual.excel.GVExcelCallOperation"
                                name="listPerson" type="call">
                        <GVExcelReport format="default" group="CREDIT"
                                       jdbc-connection="ds.gv_test" name="listPerson">
                            <Sheet id="1" name="Person List"
                                   title="Person List - timestamp{{dd/MM/yyyy HH:mm:ss}}">
                                <statement type="select">select p.NAME as &quot;Name&quot;, p.BIRTHDATE as &quot;Birth Date&quot;, c.NAME as &quot;City&quot;
                                    from PERSON p, CITY c
                                    where p.ID_CITY = c.ID
                                    decode{{@{{NAME}}::NULL::::and p.NAME=&apos;@{{NAME}}&apos;}}
                                    order by c.NAME, p.NAME</statement>
                            </Sheet>
                            <Sheet id="2" name="Credit Card List"
                                   title="Credit Card List - timestamp{{dd/MM/yyyy HH:mm:ss}}">
                                <statement type="select">select p.NAME as &quot;Name&quot;, cc.CNUMBER as &quot;Card Number&quot;, cc.CREDIT as &quot;Credit&quot;, decode(cc.ENABLED, &apos;Y&apos;, &apos;Yes&apos;, &apos;No&apos;) as &quot;Active&quot;
                                    from PERSON p, CREDIT_CARD cc
                                    where p.ID = cc.ID_OWNER
                                    decode{{@{{NAME}}::NULL::::and p.NAME=&apos;@{{NAME}}&apos;}}
                                    order by p.NAME</statement>
                            </Sheet>
                        </GVExcelReport>
                    </excel-call>
                    <birt-report-call class="it.greenvulcano.gvesb.virtual.birt.report.BIRTReportCallOperation"
                                      groupName="TestGRP" name="CreditCards"
                                      reportName="Credit Cards" reportType="excel"
                                      type="call"/>
                    <dh-call class="it.greenvulcano.gvesb.virtual.datahandler.DataHandlerCallOperation"
                             name="UserDataAsPDF" type="call">
                        <DBOBuilder class="it.greenvulcano.gvesb.datahandling.dbobuilder.DBOBuilder"
                                    jdbc-connection-name="ds.gv_test" name="UserDataAsPDF"
                                    type="dbobuilder">
                            <DHVariables>
                                <DHVariable name="decimal-separator" value="."/>
                                <DHVariable name="grouping-separator" value=","/>
                                <DHVariable name="format" value="#0.00"/>
                                <DHVariable name="NAME" value="NULL"/>
                            </DHVariables>
                            <DBOSelect class="it.greenvulcano.gvesb.datahandling.dbo.DBOSelect"
                                       name="UserDataAsPDF" transformation="UserDataAsPDF"
                                       type="dbo">
                                <statement id="1" keys="1,2,3" type="select">select p.NAME, p.BIRTHDATE, c.NAME, cc.CNUMBER, cc.CREDIT, cc.ENABLED
                                    from PERSON p, CITY c, CREDIT_CARD cc
                                    where p.ID_CITY = c.ID
                                    and p.ID = cc.ID_OWNER
                                    decode{{@{{NAME}}::NULL::::and p.NAME like &apos;%@{{NAME}}%&apos;}}
                                    order by c.NAME, p.NAME</statement>
                            </DBOSelect>
                        </DBOBuilder>
                    </dh-call>
                </Channel>
                <Channel id-channel="CHANNEL_CREDIT_DB">
                    <dh-call class="it.greenvulcano.gvesb.virtual.datahandler.DataHandlerCallOperation"
                             name="DataHandler" type="call">
                        <RetrieverConfig>
                            <GenericRetriever class="it.greenvulcano.gvesb.datahandling.utils.GenericRetriever"
                                              type="retriever">
                                <DataRetriever cacheable="true" method="getCityID"
                                               signature="NAME">select ID from CITY
                                  where NAME=&apos;@{{NAME}}&apos;</DataRetriever>
                                <DataRetriever cacheable="true" method="getCityName"
                                               signature="ID">select NAME from CITY
                                  where ID=@{{ID}}</DataRetriever>
                                <DataRetriever method="getPersonID" signature="NAME,CITY">select ID from PERSON
                                  where NAME=&apos;@{{NAME}}&apos;
                                  and ID_CITY=(select ID from CITY where NAME=&apos;@{{CITY}}&apos;)</DataRetriever>
                                <DataRetriever cacheable="true" method="getCardID"
                                               signature="NUMBER,ID_OWNER">select ID from CREDIT_CARD
                                  where CNUMBER=&apos;@{{NUMBER}}&apos;
                                  and ID_OWNER=@{{ID_OWNER}}</DataRetriever>
                                <DataRetriever method="getSeqVal">select SEQ_PERSON_ID.nextval from dual</DataRetriever>
                            </GenericRetriever>
                        </RetrieverConfig>
                        <DBOBuilder class="it.greenvulcano.gvesb.datahandling.dbobuilder.DBOBuilder"
                                    jdbc-connection-name="ds.gv_test" name="SearchPerson"
                                    type="dbobuilder">
                            <DHVariables>
                                <DHVariable name="decimal-separator" value="."/>
                                <DHVariable name="grouping-separator" value=","/>
                                <DHVariable name="format" value="#0.00"/>
                                <DHVariable name="NAME" value="NULL"/>
                                <DHVariable name="CITY" value="NULL"/>
                            </DHVariables>
                            <DBOSelect class="it.greenvulcano.gvesb.datahandling.dbo.DBOSelect"
                                       name="SearchPerson" transformation="SearchPerson"
                                       type="dbo">
                                <statement id="1" keys="1,2,3" type="select">select p.NAME, p.BIRTHDATE, c.NAME, cc.CNUMBER, cc.CREDIT, cc.ENABLED
                                    from PERSON p, CITY c, CREDIT_CARD cc
                                    where p.ID_CITY = c.ID
                                    and p.ID = cc.ID_OWNER
                                    decode{{@{{NAME}}::NULL::::and p.NAME like &apos;%@{{NAME}}%&apos;}}
                                    decode{{@{{CITY}}::NULL::::and c.NAME like &apos;%@{{CITY}}%&apos;}}
                                    order by c.NAME, p.NAME</statement>
                            </DBOSelect>
                        </DBOBuilder>
                        <DBOBuilder class="it.greenvulcano.gvesb.datahandling.dbobuilder.DBOBuilder"
                                    jdbc-connection-name="ds.gv_test" name="CreditUpdate"
                                    type="dbobuilder">
                            <DHVariables>
                                <DHVariable name="decimal-separator" value="."/>
                                <DHVariable name="grouping-separator" value=","/>
                                <DHVariable name="format" value="#0.00"/>
                            </DHVariables>
                            <DBOUpdateOrInsert class="it.greenvulcano.gvesb.datahandling.dbo.DBOUpdateOrInsert"
                                               name="CreditUpdate"
                                               transformation="CreditUpdate" type="dbo">
                                <statement id="0" type="insert">insert into CREDIT_CARD (ID, ID_OWNER, CNUMBER, CREDIT, ENABLED)
                                values (SEQ_PERSON_ID.nextval, ?, ?, ?, ?)</statement>
                                <statement id="0" type="update">update CREDIT_CARD  set CREDIT=?, ENABLED=?
                                where CNUMBER=?
                                and ID_OWNER=?</statement>
                            </DBOUpdateOrInsert>
                        </DBOBuilder>
                        <DBOBuilder class="it.greenvulcano.gvesb.datahandling.dbobuilder.DBOBuilder"
                                    jdbc-connection-name="ds.gv_test"
                                    name="PersonInsertFull" type="dbobuilder">
                            <DHVariables>
                                <DHVariable name="decimal-separator" value="."/>
                                <DHVariable name="grouping-separator" value=","/>
                                <DHVariable name="format" value="#0.00"/>
                            </DHVariables>
                            <DBOUpdate class="it.greenvulcano.gvesb.datahandling.dbo.DBOUpdate"
                                       name="PersonInsertFull"
                                       transformation="PersonInsertFull" type="dbo">
                                <statement id="0" type="update">insert into PERSON (ID, ID_CITY, NAME, BIRTHDATE)
                                values (?, ?, ?, ?)</statement>
                                <statement id="1" type="update">update PERSON set ID_CITY=?
                                where ID=?</statement>
                                <statement id="2" type="update">insert into CREDIT_CARD (ID, ID_OWNER, CNUMBER, CREDIT, ENABLED)
                                values (?, ?, ?, ?, ?)</statement>
                                <statement id="3" type="update">update CREDIT_CARD  set CREDIT=?, ENABLED=?
                                where ID=?</statement>
                            </DBOUpdate>
                        </DBOBuilder>
                    </dh-call>
                </Channel>
                <Channel id-channel="CHANNEL_CREDIT_WS">
                    <dh-call class="it.greenvulcano.gvesb.virtual.datahandler.DataHandlerCallOperation"
                             name="DataHandler" type="call">
                        <DBOBuilder class="it.greenvulcano.gvesb.datahandling.dbobuilder.DBOBuilder"
                                    jdbc-connection-name="ds.gv_test" name="CCardQuery"
                                    type="dbobuilder">
                            <DHVariables>
                                <DHVariable name="decimal-separator" value="."/>
                                <DHVariable name="grouping-separator" value=","/>
                                <DHVariable name="format" value="#0.00"/>
                            </DHVariables>
                            <DBOSelect class="it.greenvulcano.gvesb.datahandling.dbo.DBOSelect"
                                       name="CCardQuery" transformation="CCardQuery"
                                       type="dbo">
                                <statement id="1" type="select">select p.NAME, cc.CNUMBER, cc.CREDIT, cc.ENABLED
                                    from PERSON p, CREDIT_CARD cc
                                    where p.ID = cc.ID_OWNER
                                    and cc.CNUMBER = @{{CNUMBER}}</statement>
                            </DBOSelect>
                        </DBOBuilder>
                        <DBOBuilder class="it.greenvulcano.gvesb.datahandling.dbobuilder.DBOBuilder"
                                    jdbc-connection-name="ds.gv_test" name="CCardPay"
                                    type="dbobuilder">
                            <DHVariables>
                                <DHVariable name="decimal-separator" value="."/>
                                <DHVariable name="grouping-separator" value=","/>
                                <DHVariable name="format" value="#0.00"/>
                            </DHVariables>
                            <DBOUpdate class="it.greenvulcano.gvesb.datahandling.dbo.DBOUpdate"
                                       name="CCardPay" transformation="CCardPay"
                                       type="dbo">
                                <statement id="0" type="update">update CREDIT_CARD  set CREDIT= CREDIT - ?
                                    where CNUMBER=?
                                    and ENABLED=&apos;Y&apos;
                                    and CREDIT &gt;= ?</statement>
                            </DBOUpdate>
                        </DBOBuilder>
                    </dh-call>
                </Channel>
            </System>
            <System id-system="CREDIT_SIMPLE" system-activation="on">
                <Channel id-channel="CHANNEL_CREDIT_DB">
                    <db-call class="it.greenvulcano.gvesb.virtual.db.DBCallOperation"
                             name="NextPersonID" type="call">
                        <DBOperations>
                            <DataSourceConnection class="it.greenvulcano.gvesb.j2ee.db.connections.DataSourceConnection"
                                                  jndi-name="ds.gv_test"
                                                  type="db-connection"/>
                            <Statement statementType="PreparedStatement">
                                <StatementValue>select SEQ_PERSON_ID.nextval from dual</StatementValue>
                            </Statement>
                            <ResultSet>
                                <QueryFormatter class="it.greenvulcano.gvesb.j2ee.db.formatter.QueryFormatter"
                                                failure="0" success="1" type="formatter">
                                    <QueryXMLBaseFormatter class="it.greenvulcano.gvesb.j2ee.db.formatter.base.QueryXMLBaseFormatter"
                                                           encoding="UTF-8"
                                                           structure="ONLY_DATA"
                                                           type="base_formatter"/>
                                </QueryFormatter>
                            </ResultSet>
                        </DBOperations>
                    </db-call>
                    <db-call class="it.greenvulcano.gvesb.virtual.db.DBCallOperation"
                             name="PersonSearch" type="call">
                        <DBOperations>
                            <DataSourceConnection class="it.greenvulcano.gvesb.j2ee.db.connections.DataSourceConnection"
                                                  jndi-name="ds.gv_test"
                                                  type="db-connection"/>
                            <Statement statementType="PreparedStatement">
                                <StatementValue>select ID from PERSON
                                    where NAME=?
                                    and ID_CITY=(select ID from CITY where NAME=?)</StatementValue>
                                <ParamResolvers>
                                    <ParamResolver>
                                        <GVBufferParamResolver class="it.greenvulcano.gvesb.j2ee.db.resolver.GVBufferResolver"
                                                               type="resolver">
                                            <GVBufferParam GVBufferMethod="getProperty"
                                                           position="1"
                                                           propertyName="PERSON_NAME"
                                                           type="string"/>
                                            <GVBufferParam GVBufferMethod="getProperty"
                                                           position="2"
                                                           propertyName="CITY_NAME"
                                                           type="string"/>
                                        </GVBufferParamResolver>
                                    </ParamResolver>
                                </ParamResolvers>
                            </Statement>
                            <ResultSet>
                                <QueryFormatter class="it.greenvulcano.gvesb.j2ee.db.formatter.QueryFormatter"
                                                failure="0" success="1" type="formatter">
                                    <QueryXMLBaseFormatter class="it.greenvulcano.gvesb.j2ee.db.formatter.base.QueryXMLBaseFormatter"
                                                           encoding="UTF-8"
                                                           structure="ONLY_DATA"
                                                           type="base_formatter"/>
                                </QueryFormatter>
                            </ResultSet>
                        </DBOperations>
                    </db-call>
                    <db-call class="it.greenvulcano.gvesb.virtual.db.DBCallOperation"
                             name="PersonInsert" type="call">
                        <DBOperations>
                            <DataSourceConnection class="it.greenvulcano.gvesb.j2ee.db.connections.DataSourceConnection"
                                                  jndi-name="ds.gv_test"
                                                  type="db-connection"/>
                            <Statement statementType="PreparedStatement">
                                <StatementValue>insert into PERSON (ID, ID_CITY, NAME, BIRTHDATE)
                                    values (?, (select ID from CITY where NAME=?), ?, to_date(?, &apos;DD/MM/YYYY&apos;))</StatementValue>
                                <ParamResolvers>
                                    <ParamResolver>
                                        <GVBufferParamResolver class="it.greenvulcano.gvesb.j2ee.db.resolver.GVBufferResolver"
                                                               type="resolver">
                                            <GVBufferParam GVBufferMethod="getProperty"
                                                           position="1"
                                                           propertyName="ID_PERSON"
                                                           type="int"/>
                                            <GVBufferParam GVBufferMethod="getProperty"
                                                           position="2"
                                                           propertyName="CITY_NAME"
                                                           type="string"/>
                                            <GVBufferParam GVBufferMethod="getProperty"
                                                           position="3"
                                                           propertyName="PERSON_NAME"
                                                           type="string"/>
                                            <GVBufferParam GVBufferMethod="getProperty"
                                                           position="4"
                                                           propertyName="BIRTHDATE"
                                                           type="string"/>
                                        </GVBufferParamResolver>
                                    </ParamResolver>
                                </ParamResolvers>
                            </Statement>
                            <ResultSet>
                                <DMLWriteFormatter class="it.greenvulcano.gvesb.j2ee.db.formatter.DMLWriteFormatter"
                                                   success="1" type="formatter"/>
                            </ResultSet>
                        </DBOperations>
                    </db-call>
                    <db-call class="it.greenvulcano.gvesb.virtual.db.DBCallOperation"
                             name="PersonUpdate" type="call">
                        <DBOperations>
                            <DataSourceConnection class="it.greenvulcano.gvesb.j2ee.db.connections.DataSourceConnection"
                                                  jndi-name="ds.gv_test"
                                                  type="db-connection"/>
                            <Statement statementType="PreparedStatement">
                                <StatementValue>update PERSON set ID_CITY=(select ID from CITY where NAME=?)
                                    where ID=?</StatementValue>
                                <ParamResolvers>
                                    <ParamResolver>
                                        <GVBufferParamResolver class="it.greenvulcano.gvesb.j2ee.db.resolver.GVBufferResolver"
                                                               type="resolver">
                                            <GVBufferParam GVBufferMethod="getProperty"
                                                           position="1"
                                                           propertyName="CITY_NAME"
                                                           type="string"/>
                                            <GVBufferParam GVBufferMethod="getProperty"
                                                           position="2"
                                                           propertyName="ID_PERSON"
                                                           type="int"/>
                                        </GVBufferParamResolver>
                                    </ParamResolver>
                                </ParamResolvers>
                            </Statement>
                            <ResultSet>
                                <DMLWriteFormatter class="it.greenvulcano.gvesb.j2ee.db.formatter.DMLWriteFormatter"
                                                   success="1" type="formatter"/>
                            </ResultSet>
                        </DBOperations>
                    </db-call>
                    <db-call class="it.greenvulcano.gvesb.virtual.db.DBCallOperation"
                             name="CCardSearch" type="call">
                        <DBOperations>
                            <DataSourceConnection class="it.greenvulcano.gvesb.j2ee.db.connections.DataSourceConnection"
                                                  jndi-name="ds.gv_test"
                                                  type="db-connection"/>
                            <Statement statementType="PreparedStatement">
                                <StatementValue>select ID from CREDIT_CARD
                                    where CNUMBER=?</StatementValue>
                                <ParamResolvers>
                                    <ParamResolver>
                                        <GVBufferParamResolver class="it.greenvulcano.gvesb.j2ee.db.resolver.GVBufferResolver"
                                                               type="resolver">
                                            <GVBufferParam GVBufferMethod="getProperty"
                                                           position="1"
                                                           propertyName="CNUMBER"
                                                           type="string"/>
                                        </GVBufferParamResolver>
                                    </ParamResolver>
                                </ParamResolvers>
                            </Statement>
                            <ResultSet>
                                <QueryFormatter class="it.greenvulcano.gvesb.j2ee.db.formatter.QueryFormatter"
                                                failure="0" success="1" type="formatter">
                                    <QueryXMLBaseFormatter class="it.greenvulcano.gvesb.j2ee.db.formatter.base.QueryXMLBaseFormatter"
                                                           encoding="UTF-8"
                                                           structure="ONLY_DATA"
                                                           type="base_formatter"/>
                                </QueryFormatter>
                            </ResultSet>
                        </DBOperations>
                    </db-call>
                    <db-call class="it.greenvulcano.gvesb.virtual.db.DBCallOperation"
                             name="CCardInsert" type="call">
                        <DBOperations>
                            <DataSourceConnection class="it.greenvulcano.gvesb.j2ee.db.connections.DataSourceConnection"
                                                  jndi-name="ds.gv_test"
                                                  type="db-connection"/>
                            <Statement statementType="PreparedStatement">
                                <StatementValue>insert into CREDIT_CARD (ID, ID_OWNER, CNUMBER, CREDIT, ENABLED)
                                    values (SEQ_PERSON_ID.nextval, ?, ?, ?, ?)</StatementValue>
                                <ParamResolvers>
                                    <ParamResolver>
                                        <GVBufferParamResolver class="it.greenvulcano.gvesb.j2ee.db.resolver.GVBufferResolver"
                                                               type="resolver">
                                            <GVBufferParam GVBufferMethod="getProperty"
                                                           position="1"
                                                           propertyName="ID_PERSON"
                                                           type="int"/>
                                            <GVBufferParam GVBufferMethod="getProperty"
                                                           position="2"
                                                           propertyName="CNUMBER"
                                                           type="string"/>
                                            <GVBufferParam GVBufferMethod="getProperty"
                                                           position="3"
                                                           propertyName="CREDIT"
                                                           type="float"/>
                                            <GVBufferParam GVBufferMethod="getProperty"
                                                           position="4"
                                                           propertyName="ACTIVE"
                                                           type="string"/>
                                        </GVBufferParamResolver>
                                    </ParamResolver>
                                </ParamResolvers>
                            </Statement>
                            <ResultSet>
                                <DMLWriteFormatter class="it.greenvulcano.gvesb.j2ee.db.formatter.DMLWriteFormatter"
                                                   success="1" type="formatter"/>
                            </ResultSet>
                        </DBOperations>
                    </db-call>
                    <db-call class="it.greenvulcano.gvesb.virtual.db.DBCallOperation"
                             name="CCardUpdate" type="call">
                        <DBOperations>
                            <DataSourceConnection class="it.greenvulcano.gvesb.j2ee.db.connections.DataSourceConnection"
                                                  jndi-name="ds.gv_test"
                                                  type="db-connection"/>
                            <Statement statementType="PreparedStatement">
                                <StatementValue>update CREDIT_CARD  set CREDIT=?, ENABLED=?
                                    where ID=?</StatementValue>
                                <ParamResolvers>
                                    <ParamResolver>
                                        <GVBufferParamResolver class="it.greenvulcano.gvesb.j2ee.db.resolver.GVBufferResolver"
                                                               type="resolver">
                                            <GVBufferParam GVBufferMethod="getProperty"
                                                           position="1"
                                                           propertyName="CREDIT"
                                                           type="float"/>
                                            <GVBufferParam GVBufferMethod="getProperty"
                                                           position="2"
                                                           propertyName="ACTIVE"
                                                           type="string"/>
                                            <GVBufferParam GVBufferMethod="getProperty"
                                                           position="3"
                                                           propertyName="ID_CARD"
                                                           type="int"/>
                                        </GVBufferParamResolver>
                                    </ParamResolver>
                                </ParamResolvers>
                            </Statement>
                            <ResultSet>
                                <DMLWriteFormatter class="it.greenvulcano.gvesb.j2ee.db.formatter.DMLWriteFormatter"
                                                   success="1" type="formatter"/>
                            </ResultSet>
                        </DBOperations>
                    </db-call>
                </Channel>
            </System>
            <System id-system="CREDIT_EXTERNAL" system-activation="on">
                <Channel id-channel="CHANNEL_CREDIT_EXT">
                    <ws-call class="it.greenvulcano.gvesb.virtual.ws.WSCallOperation"
                             name="QueryExternal" type="call">
                        <AxisWebServiceInvoker class="it.greenvulcano.gvesb.virtual.ws.GVWebServiceInvoker"
                                               operation="Query" throwsFault="true"
                                               ref-dp="EXTERNAL::QueryWSDataProvider"
                                               returnType="body-element" type="invoker">
                            <WSDLInfo type="wsdlinfo"
                                      wsdl="file://${{gv.app.home}}/xmlconfig/wsdl/ExternalCreditService.wsdl"/>
                        </AxisWebServiceInvoker>
                    </ws-call>
                    <ws-call class="it.greenvulcano.gvesb.virtual.ws.WSCallOperation"
                             name="PayExternal" type="call">
                        <AxisWebServiceInvoker class="it.greenvulcano.gvesb.virtual.ws.GVWebServiceInvoker"
                                               operation="Pay" throwsFault="true"
                                               ref-dp="EXTERNAL::PayWSDataProvider"
                                               returnType="body-element" type="invoker">
                            <WSDLInfo type="wsdlinfo"
                                      wsdl="file://${{gv.app.home}}/xmlconfig/wsdl/ExternalCreditService.wsdl"/>
                        </AxisWebServiceInvoker>
                    </ws-call>
                </Channel>
            </System>
        </Systems>
    </GVSystems>
    <GVPolicy name="POLICY_MANAGER" type="module">
        <Roles>
            <Role name="ROLE_A">
                <Description>Role description</Description>
            </Role>
            <Role name="ROLE_B"/>
            <Role name="ROLE_C"/>
        </Roles>
        <Addresses>
            <AddressSet name="local">
                <Description>AddressSet description</Description>
                <Address address="127.0.0.1"/>
                <Address address="192.174.100.10"/>
            </AddressSet>
        </Addresses>
        <ACLGreenVulcano type="acl-manager" class="it.greenvulcano.gvesb.policy.impl.ACLGreenVulcano">
            <DefaultRes type="resource">
            </DefaultRes>
            <ServiceRes type="resource" service="CCardQuery">
                <ACL>
                    <RoleRef name="ROLE_A"/>
                    <AddressSetRef name="local"/>
                </ACL>
            </ServiceRes>
            <ServiceRes type="resource" service="CCardPay">
                <ACL>
                    <RoleRef name="ROLE_A"/>
                    <AddressSetRef name="local"/>
                </ACL>
            </ServiceRes>
        </ACLGreenVulcano>
    </GVPolicy>
    <GVConcurrencyHandler name="CONCURRENCY_HANDLER" type="module">
        <SubSystems>
            <SubSystem name="GVCore">
                <ConcurrentService max-concurrency="5" service="TOUPPER"/>
            </SubSystem>
        </SubSystems>
    </GVConcurrencyHandler>
    <GVBufferDump log-dump-size="-1" name="BUFFER_DUMP" type="module"/>
    <GVDataTransformation name="GVDT" type="module">
        <DataSourceSets>
            <DataSourceSet name="Default">
                <LocalFSDataSource class="it.greenvulcano.gvesb.gvdte.config.LocalFSDataSource"
                                   formatHandled="xsl" name="DefaultXSL"
                                   repositoryHome="${{gv.app.home}}/gvdte/datasource/xsl"
                                   type="datasource"/>
                <LocalFSDataSource class="it.greenvulcano.gvesb.gvdte.config.LocalFSDataSource"
                                   formatHandled="xsd" name="DefaultXSD"
                                   repositoryHome="${{gv.app.home}}/gvdte/datasource/xsd"
                                   type="datasource" />
                <LocalFSDataSource class="it.greenvulcano.gvesb.gvdte.config.LocalFSDataSource"
                                   formatHandled="xq" name="DefaultXQ"
                                   repositoryHome="${{gv.app.home}}/gvdte/datasource/xq"
                                   type="datasource" />
                <LocalFSDataSource class="it.greenvulcano.gvesb.gvdte.config.LocalFSDataSource"
                                   formatHandled="bin" name="DefaultBIN"
                                   repositoryHome="${{gv.app.home}}/gvdte/datasource/bin"
                                   type="datasource" />
            </DataSourceSet>
        </DataSourceSets>
        <Transformations>
            <XSLTransformation DataSourceSet="Default" XSLMapName="identity.xsl"
                               class="it.greenvulcano.gvesb.gvdte.transformers.xslt.XSLTransformer"
                               name="identityXML" type="transformation"/>
            <XSLTransformation DataSourceSet="Default" XSLMapName="identityNoNamespace.xsl"
                               class="it.greenvulcano.gvesb.gvdte.transformers.xslt.XSLTransformer"
                               name="identityXMLNoNamespace" type="transformation"/>
            <XSLTransformation DataSourceSet="Default" SchemaInput="DataHandler.xsd"
                               SchemaOutput="CreditPersons.xsd"
                               XSLMapName="DataHandler/CREDIT/SearchPerson.xsl"
                               class="it.greenvulcano.gvesb.gvdte.transformers.xslt.XSLTransformer"
                               name="SearchPerson" type="transformation"/>
            <XSLTransformation DataSourceSet="Default" SchemaInput="CreditPersons.xsd"
                               SchemaOutput="DataHandler.xsd"
                               XSLMapName="DataHandler/CREDIT/CreditUpdate.xsl"
                               class="it.greenvulcano.gvesb.gvdte.transformers.xslt.XSLTransformer"
                               name="CreditUpdate" type="transformation"/>
            <XSLTransformation DataSourceSet="Default"
                               XSLMapName="DataHandler/CREDIT/PersonInsertFull.xsl"
                               class="it.greenvulcano.gvesb.gvdte.transformers.xslt.XSLTransformer"
                               name="PersonInsertFull" type="transformation"/>
            <XSLTransformation DataSourceSet="Default" SchemaInput="DataHandler.xsd"
                               SchemaOutput="CreditService_out.xsd"
                               XSLMapName="DataHandler/CREDIT/CCardQuery.xsl"
                               class="it.greenvulcano.gvesb.gvdte.transformers.xslt.XSLTransformer"
                               name="CCardQuery" type="transformation"/>
            <XSLTransformation DataSourceSet="Default" SchemaInput="CreditService_in.xsd"
                               SchemaOutput="DataHandler.xsd"
                               XSLMapName="DataHandler/CREDIT/CCardPay.xsl"
                               class="it.greenvulcano.gvesb.gvdte.transformers.xslt.XSLTransformer"
                               name="CCardPay" type="transformation"/>
            <XSLFOPTransformation DataSourceSet="Default"
                                  XSLMapName="DataHandler/CREDIT/SearchPerson2FO.xsl"
                                  class="it.greenvulcano.gvesb.gvdte.transformers.fop.XSLFOPTransformer"
                                  name="UserDataAsPDF" type="transformation"/>
            <XSLTransformation DataSourceSet="Default"
                               XSLMapName="CREDIT/PersonInsertFull_prepare.xsl"
                               class="it.greenvulcano.gvesb.gvdte.transformers.xslt.XSLTransformer"
                               name="PersonInsertFull_prepare" type="transformation"/>
            <XSLTransformation DataSourceSet="Default" SchemaInput="CreditService_in.xsd"
                               SchemaOutput="ExternalCreditService_in.xsd"
                               XSLMapName="CREDIT_EXTERNAL/QueryExternalInput.xsl"
                               class="it.greenvulcano.gvesb.gvdte.transformers.xslt.XSLTransformer"
                               name="QueryExternalInput" type="transformation"/>
            <XSLTransformation DataSourceSet="Default"
                               SchemaInput="ExternalCreditService_out.xsd"
                               SchemaOutput="CreditService_out.xsd"
                               XSLMapName="CREDIT_EXTERNAL/QueryExternalOutput.xsl"
                               class="it.greenvulcano.gvesb.gvdte.transformers.xslt.XSLTransformer"
                               name="QueryExternalOutput" type="transformation"/>
            <XSLTransformation DataSourceSet="Default" SchemaInput="CreditService_in.xsd"
                               SchemaOutput="ExternalCreditService_in.xsd"
                               XSLMapName="CREDIT_EXTERNAL/PayExternalInput.xsl"
                               class="it.greenvulcano.gvesb.gvdte.transformers.xslt.XSLTransformer"
                               name="PayExternalInput" type="transformation"/>
            <XSLTransformation DataSourceSet="Default"
                               SchemaInput="ExternalCreditService_out.xsd"
                               SchemaOutput="CreditService_out.xsd"
                               XSLMapName="CREDIT_EXTERNAL/PayExternalOutput.xsl"
                               class="it.greenvulcano.gvesb.gvdte.transformers.xslt.XSLTransformer"
                               name="PayExternalOutput" type="transformation"/>
            <XSLTransformation DataSourceSet="Default"
                               XSLMapName="DataHandler/InsertXML.xsl"
                               class="it.greenvulcano.gvesb.gvdte.transformers.xslt.XSLTransformer"
                               name="InsertXML" type="transformation"/>
            <XSLTransformation DataSourceSet="Default"
                               XSLMapName="DataHandler/RecoveryPoint/ListRecoveryPoint.xsl"
                               class="it.greenvulcano.gvesb.gvdte.transformers.xslt.XSLTransformer"
                               name="ListRecoveryPoint" type="transformation"/>

            <HL72XMLTransformation class="it.greenvulcano.gvesb.gvdte.transformers.hl7.HL72XMLTransformer"
                                   name="TestHL72XML" type="transformation"/>
            <XML2HL7Transformation class="it.greenvulcano.gvesb.gvdte.transformers.hl7.XML2HL7Transformer"
                                   name="TestXML2HL7" type="transformation"/>
            <XSLTransformation DataSourceSet="Default" XSLMapName="HL7/TestHL7_OK.xsl"
                               class="it.greenvulcano.gvesb.gvdte.transformers.xslt.XSLTransformer"
                               name="TestHL7_OK" type="transformation"/>
        </Transformations>
    </GVDataTransformation>
    <GVTaskManagerConfiguration name="GVTASKS" type="module">
        <GVSchedulerBuilder class="it.greenvulcano.scheduler.util.quartz.impl.GVSchedulerBuilder"
                            maxThreads="3" type="scheduler-builder">
            <RamStore type="quartz-store"/>
            <Calendars>
                <DailyCalendarBuilder class="it.greenvulcano.scheduler.util.quartz.impl.calendar.DailyCalendarBuilder"
                                      invertTimeRange="false" name="DailyCalendar_excl"
                                      rangeEndingTime="17:10" rangeStartingTime="17:05"
                                      type="cron-calendar"/>
                <DailyCalendarBuilder baseCalendarName="DailyCalendar_excl"
                                      class="it.greenvulcano.scheduler.util.quartz.impl.calendar.DailyCalendarBuilder"
                                      invertTimeRange="true" name="DailyCalendar_incl"
                                      rangeEndingTime="17:15" rangeStartingTime="17:00"
                                      type="cron-calendar"/>
            </Calendars>
        </GVSchedulerBuilder>
        <TaskGroups>
            <TaskGroup name="SystemGroup">
                <LogCleanerTask auto-start="true" class="it.greenvulcano.scheduler.util.log.LogCleanerTask"
                          enabled="false" zip-older-than="7" delete-older-than="14"
                          log-directory="@{{LOG_DIR}}" zip-mode="zip"
                          name="LogCleaner" type="task">
                    <Triggers>
                        <CronTriggerBuilder class="it.greenvulcano.scheduler.util.quartz.impl.trigger.CronTriggerBuilder"
                                            cronExpression="0 0 0/2 * * ?"
                                            name="Trg_2h_gv" type="cron-trigger">
                            <TgProperties>
                                <PropertyDef name="LOG_DIR" value="sp{{gv.app.home}}/log"/>
                            </TgProperties>
                        </CronTriggerBuilder>
                        <CronTriggerBuilder class="it.greenvulcano.scheduler.util.quartz.impl.trigger.CronTriggerBuilder"
                                            cronExpression="0 0 0/2 * * ?"
                                            name="Trg_2h_jboss" type="cron-trigger">
                            <TgProperties>
                                <PropertyDef name="LOG_DIR" value="sp{{jboss.server.log.dir}}"/>
                            </TgProperties>
                        </CronTriggerBuilder>
                    </Triggers>
                </LogCleanerTask>
            </TaskGroup>
            <TaskGroup name="BaseGroup">
                <TestTask auto-start="true"
                          class="it.greenvulcano.scheduler.util.test.TestTask"
                          enabled="true" message="Executing TestTask 5m/10m"
                          name="TestTask5s/10m" sleep="1000" type="task">
                    <Triggers>
                        <CronTriggerBuilder class="it.greenvulcano.scheduler.util.quartz.impl.trigger.CronTriggerBuilder"
                                            cronExpression="0 /5 * * * ?" name="Trg_5m"
                                            type="cron-trigger">
                            <TgProperties>
                                <PropertyDef name="TgProp1" value="TgValue1"/>
                                <PropertyDef name="Prop2" value="Value2Tg_1"/>
                            </TgProperties>
                        </CronTriggerBuilder>
                        <CronTriggerBuilder class="it.greenvulcano.scheduler.util.quartz.impl.trigger.CronTriggerBuilder"
                                            cronExpression="0 /10 * * * ?" name="Trg_10m"
                                            type="cron-trigger">
                            <TgProperties>
                                <PropertyDef name="TgProp2" value="TgValue2"/>
                                <PropertyDef name="Prop2" value="Value2Tg_2"/>
                            </TgProperties>
                        </CronTriggerBuilder>
                    </Triggers>
                    <JbProperties>
                        <PropertyDef name="Prop1" value="Value1"/>
                        <PropertyDef name="Prop2" value="Value2"/>
                    </JbProperties>
                </TestTask>
            </TaskGroup>
            <TaskGroup name="TestGroup">
                <TestTask auto-start="true"
                          class="it.greenvulcano.scheduler.util.test.TestTask"
                          enabled="true" message="Executing TestTask 10s/Odd_m"
                          name="TestTask10s/Odd_m" sleep="1000" type="task">
                    <Triggers>
                        <CronTriggerBuilder calendarName="DailyCalendar_incl"
                                            class="it.greenvulcano.scheduler.util.quartz.impl.trigger.CronTriggerBuilder"
                                            cronExpression="0/10 1/2 * * * ?"
                                            name="Trg_10s_Odd_m" type="cron-trigger">
                            <TgProperties>
                                <PropertyDef name="TgProp1_A" value="TgValue1_A"/>
                                <PropertyDef name="Prop2_A" value="Value2Tg_A_1"/>
                            </TgProperties>
                        </CronTriggerBuilder>
                    </Triggers>
                    <JbProperties>
                        <PropertyDef name="Prop1_A" value="Value1_A"/>
                        <PropertyDef name="Prop2_A" value="Value2_A"/>
                    </JbProperties>
                </TestTask>
                <TestTask auto-start="true"
                          class="it.greenvulcano.scheduler.util.test.TestTask"
                          enabled="true" message="Executing TestTaskSimple 15s"
                          name="TestTaskSimple15s" sleep="1000" type="task">
                    <Triggers>
                        <SimpleTriggerBuilder class="it.greenvulcano.scheduler.util.quartz.impl.trigger.SimpleTriggerBuilder"
                                              name="Trg_15s" repeatCount="6"
                                              repeatInterval="15000" type="cron-trigger">
                            <TgProperties>
                                <PropertyDef name="TgProp1_N" value="TgValue1_N"/>
                                <PropertyDef name="Prop2_N" value="Value2Tg_N_1"/>
                            </TgProperties>
                        </SimpleTriggerBuilder>
                    </Triggers>
                    <JbProperties>
                        <PropertyDef name="Prop1_N" value="Value1_N"/>
                        <PropertyDef name="Prop2_N" value="Value2_N"/>
                    </JbProperties>
                </TestTask>
            </TaskGroup>
        </TaskGroups>
    </GVTaskManagerConfiguration>
</GVCore>