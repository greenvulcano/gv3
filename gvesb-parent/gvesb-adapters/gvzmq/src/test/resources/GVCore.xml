<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE GVCore SYSTEM "http://www.greenvulcano.com/gvesb/dtds/GVCore.dtd">

<GVCore version="1.0">
  <GVCryptoHelper name="CRYPTO_HELPER" type="module"/>
  <GVXPath name="XPATH" type="module">
    <XPath xpath-factory="it.greenvulcano.util.xpath.search.jaxen.JaxenXPathAPIFactoryImpl">
      <Description>Funzioni estese e namespaces per l&apos;XPath.</Description>
      <XPathExtension class="it.greenvulcano.util.xpath.search.extension.ExternalDocumentXPathFunction"
                      function-name="document">
            <Description>Accede ad un documento esterno. Uso: gvf:document('xml file path')</Description>
      </XPathExtension>
      <XPathNamespace namespace="http://www.w3.org/2001/XMLSchema" prefix="xsd" />
      <XPathNamespace namespace="http://www.w3.org/2001/XMLSchema-instance" prefix="xsi" />
      <XPathNamespace namespace="http://schemas.xmlsoap.org/wsdl/soap/" prefix="soap" />
      <XPathNamespace namespace="http://schemas.xmlsoap.org/wsdl/" prefix="wsdl" />
      <XPathNamespace namespace="http://jakarta.apache.org/log4j/" prefix="log4j" />
      <XPathNamespace namespace="http://www.w3.org/XML/1998/namespace" prefix="xml" />
      <XPathNamespace namespace="http://www.greenvulcano.it/greenvulcano" prefix="gvesbws"/>
      <XPathNamespace namespace="http://www.greenvulcano.it/jca/xml" prefix="jca" />
      <XPathNamespace namespace="http://www.greenvulcano.it/ldap" prefix="ldapc" />
      <XPathNamespace namespace="http://drools.org/drools-5.0/change-set" prefix="drools-cs"/>
    </XPath>
  </GVXPath>
  <GVPoolManager name="POOL_MANAGER" type="module">
    <GreenVulcanoPool default-timeout="5000" initial-size="1" maximum-creation="10" maximum-size="5"
      shrink-timeout="120000" subsystem="J2EEGreenVulcano" />
    <GreenVulcanoPool default-timeout="5000" initial-size="1" maximum-creation="10" maximum-size="5"
      shrink-timeout="120000" subsystem="J2EEForward" />
    <GreenVulcanoPool default-timeout="5000" initial-size="1" maximum-creation="10" maximum-size="5"
      shrink-timeout="120000" subsystem="JMSForward" />
    <GreenVulcanoPool default-timeout="5000" initial-size="1" maximum-creation="10" maximum-size="5"
      shrink-timeout="120000" subsystem="GreenVulcano-TimerTask" />
    <GreenVulcanoPool default-timeout="5000" initial-size="1" maximum-creation="10" maximum-size="5"
      shrink-timeout="120000" subsystem="J2EEGVESB" />
    <GreenVulcanoPool default-timeout="5000" initial-size="1" maximum-creation="10" maximum-size="5"
      shrink-timeout="120000" subsystem="GVESB-TimerTask" />
    <GreenVulcanoPool default-timeout="5000" initial-size="1" maximum-creation="10" maximum-size="5"
      shrink-timeout="120000" subsystem="GVConnector" />
    <GreenVulcanoPool default-timeout="10000" initial-size="1" maximum-creation="10" maximum-size="5"
      shrink-timeout="120000" subsystem="GreenVulcano-WebServices" />
    <GreenVulcanoPool default-timeout="10000" initial-size="1" maximum-creation="10" maximum-size="5"
      shrink-timeout="120000" subsystem="GVZMQListener" />
  </GVPoolManager>
  <GVServices name="SERVICES" type="module">
    <Management call-administration-on-init="no" />
    <BpelEngineConfiguration deployMentUnitProcess="" transactionTimeout="" startServer="true">
        <EngineProperties name="" value=""/>
    </BpelEngineConfiguration>
    <Groups>
      <Group group-activation="on" id-group="DEFAULT_GRP" />
    </Groups>
    <Services>
      <Service group-name="DEFAULT_GRP" id-service="TestZMQ_Listener" service-activation="on">
        <Operation name="RequestReply" operation-activation="on" out-check-type="sys-svc-id"  
                   type="operation" class="it.greenvulcano.gvesb.core.flow.GVFlowWF">
          <Participant id-channel="TEST_CHANNEL" id-system="GVESB" />
          <Flow first-node="call_server" point-x="50" point-y="150">
            <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode" id="call_server" id-system="GVESB"
              input="input" next-node-id="check_status" op-type="call" operation-name="call_ZMQ" output="output" type="flow-node"/>
            <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck" default-id="return_status" id="check_status"
              input="output" on-exception-id="return_error" op-type="check" point-x="350" point-y="150" type="flow-node" />
            <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode" id="return_status" op-type="end" output="output"
              point-x="700" point-y="50" type="flow-node" end-business-process="yes"/>
            <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode" id="return_error" op-type="end" output="output"
              point-x="700" point-y="250" type="flow-node" end-business-process="yes"/>
          </Flow>
        </Operation>
      </Service>
      <Service group-name="DEFAULT_GRP" id-service="TestZMQ_Publisher" service-activation="on">
        <Operation name="RequestReply" operation-activation="on" out-check-type="sys-svc-id"  
                   type="operation" class="it.greenvulcano.gvesb.core.flow.GVFlowWF">
          <Participant id-channel="TEST_CHANNEL" id-system="GVESB" />
          <Flow first-node="call_server" point-x="50" point-y="150">
            <GVOperationNode class="it.greenvulcano.gvesb.core.flow.GVOperationNode" id="call_server" id-system="GVESB"
              input="input" next-node-id="check_status" op-type="call" operation-name="publish_ZMQ" output="output" type="flow-node"/>
            <GVNodeCheck class="it.greenvulcano.gvesb.core.flow.GVNodeCheck" default-id="return_status" id="check_status"
              input="output" on-exception-id="return_error" op-type="check" point-x="350" point-y="150" type="flow-node" />
            <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode" id="return_status" op-type="end" output="output"
              point-x="700" point-y="50" type="flow-node" end-business-process="yes"/>
            <GVEndNode class="it.greenvulcano.gvesb.core.flow.GVEndNode" id="return_error" op-type="end" output="output"
              point-x="700" point-y="250" type="flow-node" end-business-process="yes"/>
          </Flow>
        </Operation>
      </Service>
    </Services>
  </GVServices>
  <GVSystems name="SYSTEMS" type="module">
    <Systems>
      <System id-system="GVESB" system-activation="on">
        <Channel id-channel="TEST_CHANNEL">
          <zmq-call type="call" class="it.greenvulcano.gvesb.virtual.zmq.ZMQCallOperation" name="call_ZMQ"
               address="tcp://127.0.0.1:5557" debug="true">
               <ScriptDecoder class="it.greenvulcano.gvesb.gvzmq.marshall.ScriptMarshaller" type="zmq-decoder" scope-name="gvesb">
                   <Script lang="js">var sb = new StringBuffer();
                       var it = msgIn.iterator();
                       while (it.hasNext()) {
                           var zf = it.next();
                           sb.append(new java.lang.String(zf.getData()));
                           if (it.hasNext()) {
                               sb.append("\n---------------\n");
                           }
                       }
                       gvbOut.setObject(sb.toString());
                   </Script>
               </ScriptDecoder>
               <ScriptEncoder class="it.greenvulcano.gvesb.gvzmq.marshall.ScriptMarshaller" type="zmq-encoder" scope-name="gvesb">
                   <Script lang="js">var obj = gvbIn.getObject();
                       if (instanceOf(obj, ZMsg)) {
                           msgOut = obj;
                       }
                       else if (instanceOf(obj, java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 0).getClass())) {
                           msgOut.add(obj);
                       }
                       else {
                           msgOut.add("" + obj);
                       }
                   </Script>
               </ScriptEncoder>
          </zmq-call>
          <zmq-publish type="call" class="it.greenvulcano.gvesb.virtual.zmq.ZMQPublishOperation" name="publish_ZMQ"
               publisher-name="TestZMQPublisher" debug="true">
               <ScriptEncoder class="it.greenvulcano.gvesb.gvzmq.marshall.ScriptMarshaller" type="zmq-encoder" scope-name="gvesb">
                   <Script>var obj = gvbIn.getObject();
                       if (instanceOf(obj, ZMsg)) {
                           msgOut = obj;
                       }
                       else if (instanceOf(obj, java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 0).getClass())) {
                           msgOut.add(obj);
                       }
                       else {
                           msgOut.add("" + obj);
                       }
                   </Script>
               </ScriptEncoder>
          </zmq-publish>
        </Channel>
      </System>
    </Systems>
  </GVSystems>
  <GVConcurrencyHandler name="CONCURRENCY_HANDLER" type="module">
    <SubSystems>
      <SubSystem name="Core" />
    </SubSystems>
  </GVConcurrencyHandler>
  <GVBufferDump log-dump-size="-1" name="BUFFER_DUMP" type="module" />
  <GVDataTransformation name="GVDT" type="module">
    <DataSourceSets>
      <DataSourceSet name="Default">
        <LocalFSDataSource class="it.greenvulcano.gvesb.gvdte.config.LocalFSDataSource" formatHandled="xsl" name="Default"
          repositoryHome="target/test-classes/gvdte/datasource/xsl" type="datasource" />
        <LocalFSDataSource class="it.greenvulcano.gvesb.gvdte.config.LocalFSDataSource" formatHandled="xsd" name="DefaultXSD"
          repositoryHome="target/test-classes/gvdte/datasource/xsd" type="datasource" />
         <LocalFSDataSource class="it.greenvulcano.gvesb.gvdte.config.LocalFSDataSource" formatHandled="bin" name="DefaultBIN"
          repositoryHome="target/test-classes/gvdte/datasource/bin" type="datasource"
          formatHandlerClass="it.greenvulcano.gvesb.gvdte.config.XMLLoader"/>
        <LocalFSDataSource class="it.greenvulcano.gvesb.gvdte.config.LocalFSDataSource" formatHandled="xq" name="Default"
          repositoryHome="target/test-classes/gvdte/datasource/xq" type="datasource" />
      </DataSourceSet>
    </DataSourceSets>
    <Transformations>
    </Transformations>
  </GVDataTransformation>
</GVCore>
